/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modultiga;

import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THINKPAD
 */
public class PembayaranSPP extends javax.swing.JFrame {
    boolean[] bulanBayar = new boolean[12]; // Array untuk melacak bulan yang dibayar

    /**
     * Creates new form PembayaranSPP
     */
    public PembayaranSPP() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbJanuari = new javax.swing.JCheckBox();
        cbFebruari = new javax.swing.JCheckBox();
        cbMaret = new javax.swing.JCheckBox();
        cbApril = new javax.swing.JCheckBox();
        cbMei = new javax.swing.JCheckBox();
        cbJuni = new javax.swing.JCheckBox();
        cbJuli = new javax.swing.JCheckBox();
        cbAgustus = new javax.swing.JCheckBox();
        cbSeptember = new javax.swing.JCheckBox();
        cbOktober = new javax.swing.JCheckBox();
        cbNovember = new javax.swing.JCheckBox();
        cbDesember = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        fieldNominal = new javax.swing.JTextField();
        btnHitung = new javax.swing.JButton();
        fieldTotal = new javax.swing.JTextField();
        fieldBayar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        fieldBack = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnBayar = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fieldNama = new javax.swing.JTextField();
        btnCek = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaRiwayat = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableStatus = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(37, 113, 128));
        jPanel1.setLayout(null);

        jPanel2.setLayout(new javax.swing.OverlayLayout(jPanel2));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\THINKPAD\\Downloads\\PEMBAYARAN SPP (1).png")); // NOI18N
        jPanel2.add(jLabel9);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 750, 60);

        jPanel3.setBackground(new java.awt.Color(242, 229, 191));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(37, 113, 128));
        jLabel2.setText("Bulan :");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        cbJanuari.setForeground(new java.awt.Color(37, 113, 128));
        cbJanuari.setText("Januari");
        cbJanuari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbJanuariActionPerformed(evt);
            }
        });
        jPanel3.add(cbJanuari, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 34, 85, -1));

        cbFebruari.setForeground(new java.awt.Color(37, 113, 128));
        cbFebruari.setText("Februari");
        jPanel3.add(cbFebruari, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 34, 85, -1));

        cbMaret.setForeground(new java.awt.Color(37, 113, 128));
        cbMaret.setText("Maret");
        jPanel3.add(cbMaret, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 34, 85, -1));

        cbApril.setForeground(new java.awt.Color(37, 113, 128));
        cbApril.setText("April");
        cbApril.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAprilActionPerformed(evt);
            }
        });
        jPanel3.add(cbApril, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 60, 85, -1));

        cbMei.setForeground(new java.awt.Color(37, 113, 128));
        cbMei.setText("Mei");
        jPanel3.add(cbMei, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 60, 85, -1));

        cbJuni.setForeground(new java.awt.Color(37, 113, 128));
        cbJuni.setText("Juni");
        jPanel3.add(cbJuni, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 85, -1));

        cbJuli.setForeground(new java.awt.Color(37, 113, 128));
        cbJuli.setText("Juli");
        jPanel3.add(cbJuli, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 86, 85, -1));

        cbAgustus.setForeground(new java.awt.Color(37, 113, 128));
        cbAgustus.setText("Agustus");
        jPanel3.add(cbAgustus, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 86, 85, -1));

        cbSeptember.setForeground(new java.awt.Color(37, 113, 128));
        cbSeptember.setText("September");
        jPanel3.add(cbSeptember, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 86, 85, -1));

        cbOktober.setForeground(new java.awt.Color(37, 113, 128));
        cbOktober.setText("Oktober");
        jPanel3.add(cbOktober, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 112, 91, -1));

        cbNovember.setForeground(new java.awt.Color(37, 113, 128));
        cbNovember.setText("November");
        jPanel3.add(cbNovember, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 112, 91, -1));

        cbDesember.setForeground(new java.awt.Color(37, 113, 128));
        cbDesember.setText("Desember");
        jPanel3.add(cbDesember, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 112, 91, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(37, 113, 128));
        jLabel3.setText("Nominal Pembayaran (per Bulan)");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 144, -1, -1));

        fieldNominal.setEditable(false);
        fieldNominal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNominalActionPerformed(evt);
            }
        });
        jPanel3.add(fieldNominal, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 172, 308, -1));

        btnHitung.setBackground(new java.awt.Color(37, 113, 128));
        btnHitung.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHitung.setForeground(new java.awt.Color(242, 229, 191));
        btnHitung.setText("Hitung");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });
        jPanel3.add(btnHitung, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 206, -1, -1));
        jPanel3.add(fieldTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 241, 308, -1));
        jPanel3.add(fieldBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 275, 219, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(37, 113, 128));
        jLabel1.setText("Kembalian");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 318, -1, -1));
        jPanel3.add(fieldBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 315, 219, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(37, 113, 128));
        jLabel7.setText("Uang Anda");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 278, -1, -1));

        btnBayar.setBackground(new java.awt.Color(37, 113, 128));
        btnBayar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBayar.setForeground(new java.awt.Color(242, 229, 191));
        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });
        jPanel3.add(btnBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 365, -1, -1));

        btnReset.setBackground(new java.awt.Color(37, 113, 128));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(242, 229, 191));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel3.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 365, -1, -1));

        jPanel1.add(jPanel3);
        jPanel3.setBounds(20, 90, 320, 420);

        jPanel4.setBackground(new java.awt.Color(242, 229, 191));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(37, 113, 128));
        jLabel4.setText("Pengecekan");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(37, 113, 128));
        jLabel5.setText("Nama :");

        btnCek.setBackground(new java.awt.Color(37, 113, 128));
        btnCek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCek.setForeground(new java.awt.Color(242, 229, 191));
        btnCek.setText("Cek");
        btnCek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCekActionPerformed(evt);
            }
        });

        areaRiwayat.setColumns(20);
        areaRiwayat.setRows(5);
        jScrollPane1.setViewportView(areaRiwayat);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(37, 113, 128));
        jLabel8.setText("Riwayat");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(fieldNama)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(btnCek))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(146, 146, 146))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(117, 117, 117))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnCek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(350, 90, 380, 420);

        tableStatus.setBackground(new java.awt.Color(242, 229, 191));
        tableStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama", "Status", "Bulan", "Nominal"
            }
        ));
        jScrollPane2.setViewportView(tableStatus);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 530, 710, 150);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 750, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCekActionPerformed
        // TODO add your handling code here:
        // Validasi nama tidak boleh kosong
        String nama = fieldNama.getText();
        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Set nominal tetap di fieldNominal
        fieldNominal.setText("100000"); // Set nominal tetap 100.000
        boolean found = false;
        // Mencari nama dalam tabel
        for (int i = 0; i < tableStatus.getRowCount(); i++) {
            String namaSiswa = tableStatus.getValueAt(i, 1).toString(); // Kolom nama
            if (namaSiswa.equalsIgnoreCase(nama)) {
                found = true;
                // Ambil data dari tabel
                String status = tableStatus.getValueAt(i, 2).toString(); // Status
                String bulanDibayar = tableStatus.getValueAt(i, 3).toString(); // Bulan dibayar
                String nominal = tableStatus.getValueAt(i, 4).toString(); // Nominal
                // Logika untuk bulan yang belum dibayar
                String[] allMonths = {"Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", 
                    "September", "Oktober", "November", "Desember"};
                StringBuilder bulanBelumDibayar = new StringBuilder();
                for (String month : allMonths) {
                    if (!bulanDibayar.contains(month)) {
                        bulanBelumDibayar.append(month).append(", ");
                    }
                }
                // Menghapus koma terakhir jika ada
                if (bulanBelumDibayar.length() > 0) {
                    bulanBelumDibayar.setLength(bulanBelumDibayar.length() - 2); // Hapus ", " terakhir
                }
                // Tampilkan informasi di area riwayat
                areaRiwayat.setText(""); // Kosongkan area riwayat
                areaRiwayat.append("Nama: " + nama + "\n");
                areaRiwayat.append("Status: " + status + "\n");
                areaRiwayat.append("Bulan Dibayar: " + bulanDibayar + "\n");
                areaRiwayat.append("Bulan Belum Dibayar: " + (bulanBelumDibayar.length() > 0 ? bulanBelumDibayar.toString() : "Semua bulan telah dibayar") + "\n");
                areaRiwayat.append("Nominal: " + nominal + "\n\n");
                break; // Keluar dari loop setelah menemukan nama
            }
        }
        // Jika nama tidak ditemukan, tampilkan informasi bahwa belum membayar sama sekali
        if (!found) {
            // Semua bulan yang belum dibayar karena siswa baru
            String bulanBelumDibayar = "Januari, Februari, Maret, April, Mei, Juni, Juli, Agustus, September, Oktober, November, Desember";
            // Tampilkan informasi di area riwayat tanpa menambah data ke tabel
            areaRiwayat.setText(""); // Kosongkan area riwayat
            areaRiwayat.append("Nama: " + nama + "\n");
            areaRiwayat.append("Status: Menunggak\n");
            areaRiwayat.append("Bulan Dibayar: Belum ada bulan\n");
            areaRiwayat.append("Bulan Belum Dibayar: " + bulanBelumDibayar + "\n");
            areaRiwayat.append("Nominal: 0\n\n");
            JOptionPane.showMessageDialog(null, "Siswa belum membayar sama sekali.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCekActionPerformed

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        // TODO add your handling code here:
        int totalBulan = 0;
                if (cbJanuari.isSelected()) totalBulan++;
                if (cbFebruari.isSelected()) totalBulan++;
                if (cbMaret.isSelected()) totalBulan++;
                if (cbApril.isSelected()) totalBulan++;
                if (cbMei.isSelected()) totalBulan++;
                if (cbJuni.isSelected()) totalBulan++;
                if (cbJuli.isSelected()) totalBulan++;
                if (cbAgustus.isSelected()) totalBulan++;
                if (cbSeptember.isSelected()) totalBulan++;
                if (cbOktober.isSelected()) totalBulan++;
                if (cbNovember.isSelected()) totalBulan++;
                if (cbDesember.isSelected()) totalBulan++;
                int nominalPerBulan = 100000; // Nominal tetap SPP per bulan
                int totalPembayaran = totalBulan * nominalPerBulan;
                fieldTotal.setText(String.valueOf(totalPembayaran));
    }//GEN-LAST:event_btnHitungActionPerformed

    private void cbJanuariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbJanuariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbJanuariActionPerformed

    private void fieldNominalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNominalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNominalActionPerformed

    private void cbAprilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAprilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAprilActionPerformed

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        // TODO add your handling code here:
        // Validasi jumlah bayar dan total pembayaran
        int totalPembayaran = Integer.parseInt(fieldTotal.getText());
        int jumlahBayar = Integer.parseInt(fieldBayar.getText());
        if (jumlahBayar < totalPembayaran) {
            JOptionPane.showMessageDialog(null, "Jumlah bayar tidak cukup!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Menghitung kembalian
        int kembalian = jumlahBayar - totalPembayaran;
        fieldBack.setText(String.valueOf(kembalian));
        // Mendapatkan bulan yang dibayar
        StringBuilder bulanDibayar = new StringBuilder();
//        boolean[] bulanBayar = new boolean[12]; // Array untuk melacak bulan yang dibayar
        int jumlahBulanDibayar = 0; // Untuk menghitung jumlah bulan yang dibayar
        if (cbJanuari.isSelected()) {
            bulanDibayar.append("Januari, ");
            bulanBayar[0] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbJanuari.setEnabled(false);
            cbJanuari.setSelected(false);
        }
        if (cbFebruari.isSelected()) {
            bulanDibayar.append("Februari, ");
            bulanBayar[1] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbFebruari.setEnabled(false);
            cbFebruari.setSelected(false);
        }
        if (cbMaret.isSelected()) {
            bulanDibayar.append("Maret, ");
            bulanBayar[2] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbMaret.setEnabled(false);
            cbMaret.setSelected(false);
        }
        if (cbApril.isSelected()) {
            bulanDibayar.append("April, ");
            bulanBayar[3] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbApril.setEnabled(false);
            cbApril.setSelected(false);
        }
        if (cbMei.isSelected()) {
            bulanDibayar.append("Mei, ");
            bulanBayar[4] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbMei.setEnabled(false);
            cbMei.setSelected(false);
        }
        if (cbJuni.isSelected()) {
            bulanDibayar.append("Juni, ");
            bulanBayar[5] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbJuni.setEnabled(false);
            cbJuni.setSelected(false);
        }
        if (cbJuli.isSelected()) {
            bulanDibayar.append("Juli, ");
            bulanBayar[6] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbJuli.setEnabled(false);
            cbJuli.setSelected(false);
        }
        if (cbAgustus.isSelected()) {
            bulanDibayar.append("Agustus, ");
            bulanBayar[7] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbAgustus.setEnabled(false);
            cbAgustus.setSelected(false);
        }
        if (cbSeptember.isSelected()) {
            bulanDibayar.append("September, ");
            bulanBayar[8] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbSeptember.setEnabled(false);
            cbSeptember.setSelected(false);
        }
        if (cbOktober.isSelected()) {
            bulanDibayar.append("Oktober, ");
            bulanBayar[9] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbOktober.setEnabled(false);
            cbOktober.setSelected(false);
        }
        if (cbNovember.isSelected()) {
            bulanDibayar.append("November, ");
            bulanBayar[10] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbNovember.setEnabled(false);
            cbNovember.setSelected(false);
        }
        if (cbDesember.isSelected()) {
            bulanDibayar.append("Desember, ");
            bulanBayar[11] = true;
            jumlahBulanDibayar++; // Tambahkan jumlah bulan dibayar
            cbDesember.setEnabled(false);
            cbDesember.setSelected(false);
        }
//        fieldTotal.setText("0");
//        // Menghapus koma terakhir dari bulan yang dibayar
        if (bulanDibayar.length() > 0) {
            bulanDibayar.setLength(bulanDibayar.length() - 2); // Menghapus ", " terakhir
        }
        // Mencari nama siswa di dalam tabel
        DefaultTableModel model = (DefaultTableModel) tableStatus.getModel();
        boolean found = false;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 1).toString().equalsIgnoreCase(fieldNama.getText())) {
//                // Jika nama ditemukan, perbarui baris
                String bulanSebelumnya = model.getValueAt(i, 3).toString(); // Bulan yang sudah dibayar sebelumnya
                int nominalSebelumnya = Integer.parseInt(model.getValueAt(i, 4).toString()); // Nominal sebelumnya
//                // Update bulan yang sudah dibayar
                StringBuilder bulanTerupdate = new StringBuilder(bulanSebelumnya);
                if (!bulanSebelumnya.contains("Januari") && bulanBayar[0]) bulanTerupdate.append("Januari, ");
                if (!bulanSebelumnya.contains("Februari") && bulanBayar[1]) bulanTerupdate.append("Februari, ");
                if (!bulanSebelumnya.contains("Maret") && bulanBayar[2]) bulanTerupdate.append("Maret, ");
                if (!bulanSebelumnya.contains("April") && bulanBayar[3]) bulanTerupdate.append("April, ");
                if (!bulanSebelumnya.contains("Mei") && bulanBayar[4]) bulanTerupdate.append("Mei, ");
                if (!bulanSebelumnya.contains("Juni") && bulanBayar[5]) bulanTerupdate.append("Juni, ");
                if (!bulanSebelumnya.contains("Juli") && bulanBayar[6]) bulanTerupdate.append("Juli, ");
                if (!bulanSebelumnya.contains("Agustus") && bulanBayar[7]) bulanTerupdate.append("Agustus, ");
                if (!bulanSebelumnya.contains("September") && bulanBayar[8]) bulanTerupdate.append("September, ");
                if (!bulanSebelumnya.contains("Oktober") && bulanBayar[9]) bulanTerupdate.append("Oktober, ");
                if (!bulanSebelumnya.contains("November") && bulanBayar[10]) bulanTerupdate.append("November, ");
                if (!bulanSebelumnya.contains("Desember") && bulanBayar[11]) bulanTerupdate.append("Desember, ");
                // Menghapus koma terakhir dari bulanTerupdate
                if (bulanTerupdate.length() > 0) {
                    bulanTerupdate.setLength(bulanTerupdate.length() - 2);
                }
//                // Update status: Jika 12 bulan sudah dibayar, status "Lunas"
                String status = bulanTerupdate.toString().contains("Januari") && bulanTerupdate.toString().contains("Desember") 
                                ? "Lunas" : "Menunggak";
//                // Update data di tabel (tambahkan nominal baru ke nominal sebelumnya)
                int nominalBaru = jumlahBulanDibayar * 100000;  // Hitung nominal baru berdasarkan jumlah bulan dibayar
                int nominalTerupdate = nominalSebelumnya + nominalBaru; // Tambahkan nominal baru ke nominal sebelumnya
                model.setValueAt(status, i, 2);  // Update kolom status
                model.setValueAt(bulanTerupdate.toString(), i, 3);  // Update kolom bulan yang dibayar
                model.setValueAt(nominalTerupdate, i, 4);  // Update kolom total pembayaran
                found = true;
                break;
            }
        }
//       // Jika nama tidak ditemukan, tambahkan baris baru
        if (!found) {
            int nominalBaru = jumlahBulanDibayar * 100000; // Hitung nominal baru berdasarkan jumlah bulan dibayar
            model.addRow(new Object[]{
                model.getRowCount() + 1,  // Nomor urut
                fieldNama.getText(),      // Nama
                bulanDibayar.length() == 12 ? "Lunas" : "Menunggak", // Status
                bulanDibayar.toString(),  // Bulan yang dibayar
                nominalBaru               // Nominal pembayaran baru
            });
        }
    }//GEN-LAST:event_btnBayarActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        // Menghapus teks dari field nama
        fieldNama.setText("");
        // Menghapus teks dari area riwayat 
        areaRiwayat.setText("");
        // Reset semua checkbox
        cbJanuari.setSelected(false);
        cbFebruari.setSelected(false);
        cbMaret.setSelected(false);
        cbApril.setSelected(false);
        cbMei.setSelected(false);
        cbJuni.setSelected(false);
        cbJuli.setSelected(false);
        cbAgustus.setSelected(false);
        cbSeptember.setSelected(false);
        cbOktober.setSelected(false);
        cbNovember.setSelected(false);
        cbDesember.setSelected(false);
        // Menghapus teks dari field total
        fieldTotal.setText("");
        // Menghapus teks dari field bayar
        fieldBayar.setText("");
        // Menghapus teks dari field kembali
        fieldBack.setText("");
        // mengaktifkan kembali checkbox yang telah dinonaktifkan 
        cbJanuari.setEnabled(true);
        cbFebruari.setEnabled(true);
        cbMaret.setEnabled(true);
        cbApril.setEnabled(true);
        cbMei.setEnabled(true);
        cbJuni.setEnabled(true);
        cbJuli.setEnabled(true);
        cbAgustus.setEnabled(true);
        cbSeptember.setEnabled(true);
        cbOktober.setEnabled(true);
        cbNovember.setEnabled(true);
        cbDesember.setEnabled(true);
        // memiliki variabel bulanSudahDipilih, reset 
        Arrays.fill(bulanBayar, false); 
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PembayaranSPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PembayaranSPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PembayaranSPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PembayaranSPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PembayaranSPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaRiwayat;
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnCek;
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox cbAgustus;
    private javax.swing.JCheckBox cbApril;
    private javax.swing.JCheckBox cbDesember;
    private javax.swing.JCheckBox cbFebruari;
    private javax.swing.JCheckBox cbJanuari;
    private javax.swing.JCheckBox cbJuli;
    private javax.swing.JCheckBox cbJuni;
    private javax.swing.JCheckBox cbMaret;
    private javax.swing.JCheckBox cbMei;
    private javax.swing.JCheckBox cbNovember;
    private javax.swing.JCheckBox cbOktober;
    private javax.swing.JCheckBox cbSeptember;
    private javax.swing.JTextField fieldBack;
    private javax.swing.JTextField fieldBayar;
    private javax.swing.JTextField fieldNama;
    private javax.swing.JTextField fieldNominal;
    private javax.swing.JTextField fieldTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableStatus;
    // End of variables declaration//GEN-END:variables
}
