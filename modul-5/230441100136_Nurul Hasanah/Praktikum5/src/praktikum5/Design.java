/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package praktikum5;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fadila Nur Habibah
 */
public class Design extends javax.swing.JFrame {

    /**
     * Creates new form Design
     */
    
    public Design() {
        initComponents();
        load_data();
        load_data2();
        load_data3();
        updateComboBox();
        updateComboBox1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUtama = new javax.swing.JPanel();
        panelIsi = new javax.swing.JTabbedPane();
        panelKaryawan = new javax.swing.JPanel();
        panelJudul = new javax.swing.JPanel();
        lblJudul1 = new javax.swing.JLabel();
        lblJudul2 = new javax.swing.JLabel();
        gambar1 = new javax.swing.JLabel();
        gambar2 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblNama = new javax.swing.JLabel();
        lblJabatan = new javax.swing.JLabel();
        lblDepartemen = new javax.swing.JLabel();
        TFdepartemen = new javax.swing.JTextField();
        TFid = new javax.swing.JTextField();
        TFnama = new javax.swing.JTextField();
        panelTabel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel1 = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        TFcari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        TFjabatan = new javax.swing.JTextField();
        panelProyek = new javax.swing.JPanel();
        panelJudul2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblID2 = new javax.swing.JLabel();
        lblNamaProyek = new javax.swing.JLabel();
        lblDurasiProyek = new javax.swing.JLabel();
        TFcari2 = new javax.swing.JTextField();
        TFid2 = new javax.swing.JTextField();
        TFnama2 = new javax.swing.JTextField();
        TFdurasi = new javax.swing.JTextField();
        panelTabel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel2 = new javax.swing.JTable();
        btnSimpan2 = new javax.swing.JButton();
        btnEdit2 = new javax.swing.JButton();
        btnCari2 = new javax.swing.JButton();
        btnDelete2 = new javax.swing.JButton();
        panelTransaksi = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblTransaksi = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TFcari3 = new javax.swing.JTextField();
        btnSimpan3 = new javax.swing.JButton();
        btnEdit3 = new javax.swing.JButton();
        btnCari3 = new javax.swing.JButton();
        TFperan = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel3 = new javax.swing.JTable();
        btnDelete3 = new javax.swing.JButton();
        CBproyek = new javax.swing.JComboBox<>();
        CBkaryawan = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelUtama.setBackground(new java.awt.Color(255, 255, 204));

        panelIsi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        panelKaryawan.setBackground(new java.awt.Color(51, 0, 0));
        panelKaryawan.setLayout(null);

        panelJudul.setBackground(new java.awt.Color(255, 255, 255));
        panelJudul.setLayout(null);

        lblJudul1.setBackground(new java.awt.Color(51, 0, 0));
        lblJudul1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblJudul1.setForeground(new java.awt.Color(51, 0, 0));
        lblJudul1.setText("TABEL ---------------");
        panelJudul.add(lblJudul1);
        lblJudul1.setBounds(100, 10, 400, 44);

        lblJudul2.setBackground(new java.awt.Color(51, 0, 0));
        lblJudul2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblJudul2.setForeground(new java.awt.Color(51, 0, 0));
        lblJudul2.setText("KARYAWAN");
        panelJudul.add(lblJudul2);
        lblJudul2.setBounds(180, 40, 290, 58);

        gambar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar1.png"))); // NOI18N
        panelJudul.add(gambar1);
        gambar1.setBounds(480, 20, 60, 73);

        gambar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar2.png"))); // NOI18N
        panelJudul.add(gambar2);
        gambar2.setBounds(20, 10, 160, 110);

        panelKaryawan.add(panelJudul);
        panelJudul.setBounds(0, 0, 590, 120);

        lblID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblID.setForeground(new java.awt.Color(255, 255, 255));
        lblID.setText("ID");
        panelKaryawan.add(lblID);
        lblID.setBounds(80, 150, 17, 17);

        lblNama.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNama.setForeground(new java.awt.Color(255, 255, 255));
        lblNama.setText("NAMA");
        panelKaryawan.add(lblNama);
        lblNama.setBounds(80, 200, 43, 17);

        lblJabatan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblJabatan.setForeground(new java.awt.Color(255, 255, 255));
        lblJabatan.setText("JABATAN");
        panelKaryawan.add(lblJabatan);
        lblJabatan.setBounds(80, 250, 67, 17);

        lblDepartemen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDepartemen.setForeground(new java.awt.Color(255, 255, 255));
        lblDepartemen.setText("DEPARTEMEN");
        panelKaryawan.add(lblDepartemen);
        lblDepartemen.setBounds(80, 300, 98, 17);

        TFdepartemen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelKaryawan.add(TFdepartemen);
        TFdepartemen.setBounds(220, 290, 260, 30);

        TFid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelKaryawan.add(TFid);
        TFid.setBounds(220, 140, 260, 30);

        TFnama.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelKaryawan.add(TFnama);
        TFnama.setBounds(220, 190, 260, 30);

        panelTabel1.setBackground(new java.awt.Color(51, 0, 0));

        tabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel1.setEnabled(false);
        tabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel1);

        panelTabel1.add(jScrollPane1);

        panelKaryawan.add(panelTabel1);
        panelTabel1.setBounds(0, 440, 570, 210);

        btnSimpan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        panelKaryawan.add(btnSimpan);
        btnSimpan.setBounds(120, 340, 90, 30);

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        panelKaryawan.add(btnEdit);
        btnEdit.setBounds(230, 340, 90, 30);

        TFcari.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelKaryawan.add(TFcari);
        TFcari.setBounds(150, 400, 130, 30);

        btnCari.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCari.setText("CARI");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        panelKaryawan.add(btnCari);
        btnCari.setBounds(300, 400, 100, 30);

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelKaryawan.add(btnDelete);
        btnDelete.setBounds(340, 340, 90, 30);

        TFjabatan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelKaryawan.add(TFjabatan);
        TFjabatan.setBounds(220, 240, 260, 30);

        panelIsi.addTab("Tabel Karyawan", panelKaryawan);

        panelProyek.setBackground(new java.awt.Color(0, 0, 51));
        panelProyek.setLayout(null);

        panelJudul2.setBackground(new java.awt.Color(255, 255, 255));
        panelJudul2.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar3.png"))); // NOI18N
        panelJudul2.add(jLabel1);
        jLabel1.setBounds(30, 40, 132, 99);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 51));
        jLabel2.setText("TABEL PROYEK");
        panelJudul2.add(jLabel2);
        jLabel2.setBounds(160, 30, 380, 58);

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel3.setText("-----------------------------");
        panelJudul2.add(jLabel3);
        jLabel3.setBounds(210, 80, 280, 29);

        panelProyek.add(panelJudul2);
        panelJudul2.setBounds(0, 0, 580, 130);

        lblID2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblID2.setForeground(new java.awt.Color(255, 255, 255));
        lblID2.setText("ID");
        panelProyek.add(lblID2);
        lblID2.setBounds(80, 160, 150, 17);

        lblNamaProyek.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNamaProyek.setForeground(new java.awt.Color(255, 255, 255));
        lblNamaProyek.setText("NAMA PROYEK");
        panelProyek.add(lblNamaProyek);
        lblNamaProyek.setBounds(80, 210, 150, 17);

        lblDurasiProyek.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDurasiProyek.setForeground(new java.awt.Color(255, 255, 255));
        lblDurasiProyek.setText("DURASI PEKERJAAN");
        panelProyek.add(lblDurasiProyek);
        lblDurasiProyek.setBounds(80, 260, 150, 17);

        TFcari2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TFcari2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFcari2ActionPerformed(evt);
            }
        });
        panelProyek.add(TFcari2);
        TFcari2.setBounds(160, 360, 140, 30);

        TFid2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelProyek.add(TFid2);
        TFid2.setBounds(240, 150, 250, 30);

        TFnama2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelProyek.add(TFnama2);
        TFnama2.setBounds(240, 200, 250, 30);

        TFdurasi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelProyek.add(TFdurasi);
        TFdurasi.setBounds(240, 250, 250, 30);

        panelTabel2.setBackground(new java.awt.Color(0, 0, 51));

        tabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabel2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel2.setEnabled(false);
        tabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel2);

        panelTabel2.add(jScrollPane2);

        panelProyek.add(panelTabel2);
        panelTabel2.setBounds(0, 400, 570, 220);

        btnSimpan2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSimpan2.setText("SIMPAN");
        btnSimpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpan2ActionPerformed(evt);
            }
        });
        panelProyek.add(btnSimpan2);
        btnSimpan2.setBounds(140, 300, 90, 30);

        btnEdit2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEdit2.setText("EDIT");
        btnEdit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit2ActionPerformed(evt);
            }
        });
        panelProyek.add(btnEdit2);
        btnEdit2.setBounds(240, 300, 90, 30);

        btnCari2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCari2.setText("CARI");
        btnCari2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCari2ActionPerformed(evt);
            }
        });
        panelProyek.add(btnCari2);
        btnCari2.setBounds(320, 360, 90, 30);

        btnDelete2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete2.setText("DELETE");
        btnDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete2ActionPerformed(evt);
            }
        });
        panelProyek.add(btnDelete2);
        btnDelete2.setBounds(340, 300, 90, 30);

        panelIsi.addTab("Tabel Proyek", panelProyek);

        panelTransaksi.setBackground(new java.awt.Color(0, 51, 51));
        panelTransaksi.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar5.png"))); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 0, 80, 79);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar1.png"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(510, 10, 68, 60);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar4.png"))); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(60, 70, 50, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/gambar3.png"))); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(400, 40, 140, 90);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("------TABEL------ ");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(110, 0, 320, 60);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("TRANSAKSI");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(120, 50, 320, 60);

        panelTransaksi.add(jPanel1);
        jPanel1.setBounds(0, 0, 580, 120);

        lblTransaksi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        lblTransaksi.setText("ID KARYAWAN");
        panelTransaksi.add(lblTransaksi);
        lblTransaksi.setBounds(80, 150, 110, 17);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("ID PROYEK");
        panelTransaksi.add(jLabel11);
        jLabel11.setBounds(80, 210, 110, 17);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("PERAN");
        panelTransaksi.add(jLabel12);
        jLabel12.setBounds(80, 260, 110, 17);

        TFcari3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelTransaksi.add(TFcari3);
        TFcari3.setBounds(110, 360, 250, 30);

        btnSimpan3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSimpan3.setText("SIMPAN");
        btnSimpan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpan3ActionPerformed(evt);
            }
        });
        panelTransaksi.add(btnSimpan3);
        btnSimpan3.setBounds(220, 300, 88, 30);

        btnEdit3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEdit3.setText("EDIT");
        btnEdit3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit3ActionPerformed(evt);
            }
        });
        panelTransaksi.add(btnEdit3);
        btnEdit3.setBounds(320, 300, 90, 30);

        btnCari3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCari3.setText("CARI");
        btnCari3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCari3ActionPerformed(evt);
            }
        });
        panelTransaksi.add(btnCari3);
        btnCari3.setBounds(380, 360, 90, 30);

        TFperan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panelTransaksi.add(TFperan);
        TFperan.setBounds(220, 250, 290, 30);

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        tabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabel3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel3.setEnabled(false);
        tabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabel3);

        jPanel2.add(jScrollPane3);

        panelTransaksi.add(jPanel2);
        jPanel2.setBounds(0, 400, 570, 230);

        btnDelete3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete3.setText("DELETE");
        btnDelete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete3ActionPerformed(evt);
            }
        });
        panelTransaksi.add(btnDelete3);
        btnDelete3.setBounds(420, 300, 90, 30);

        CBproyek.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CBproyek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Silahkan Isi ID Telebih dahulu  ---" }));
        panelTransaksi.add(CBproyek);
        CBproyek.setBounds(220, 200, 290, 30);

        CBkaryawan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CBkaryawan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Silahkan Isi ID Telebih dahulu ---" }));
        CBkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBkaryawanActionPerformed(evt);
            }
        });
        panelTransaksi.add(CBkaryawan);
        CBkaryawan.setBounds(220, 150, 290, 30);

        panelIsi.addTab("Tabel Transaksi", panelTransaksi);

        javax.swing.GroupLayout panelUtamaLayout = new javax.swing.GroupLayout(panelUtama);
        panelUtama.setLayout(panelUtamaLayout);
        panelUtamaLayout.setHorizontalGroup(
            panelUtamaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUtamaLayout.createSequentialGroup()
                .addComponent(panelIsi, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelUtamaLayout.setVerticalGroup(
            panelUtamaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUtamaLayout.createSequentialGroup()
                .addComponent(panelIsi, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelUtama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelUtama, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        try {
            if (TFid.getText().isEmpty() || TFnama.getText().isEmpty() || TFjabatan.getText().isEmpty() || TFdepartemen.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Harap lengkapi semua data!");
                return; 
            }
            
            String sql = "INSERT INTO karyawan (id, nama, jabatan, departemen) VALUES (?, ?, ?, ?)";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, TFid.getText());
            pst.setString(2, TFnama.getText());
            pst.setString(3, TFjabatan.getText());
            pst.setString(4, TFdepartemen.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
            updateComboBox();
            load_data();
            kosong();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }  
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id = ?";
                java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, TFnama.getText());
                pst.setString(2, TFjabatan.getText());
                pst.setString(3, TFdepartemen.getText());
                pst.setString(4, TFid.getText());

                int rowsUpdated = pst.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
                } else {
                    JOptionPane.showMessageDialog(null, "Data Gagal Diupdate");
                }

                load_data(); 
                kosong();     
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        try {
            load_data(); 
            String sql = "SELECT * FROM karyawan WHERE id = ?";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, TFcari.getText());
            java.sql.ResultSet res = pst.executeQuery();

            if (res.next()) {
                TFid.setText(res.getString("id"));
                TFnama.setText(res.getString("nama"));
                TFjabatan.setText(res.getString("jabatan"));
                TFdepartemen.setText(res.getString("departemen"));
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void tabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabel1MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            String id = TFid.getText();

            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID belum dipilih. Silakan pilih data terlebih dahulu.");
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM karyawan WHERE id = ?";
                    java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                    load_data();
//                    updateComboBoxIdKaryawan();
                    kosong();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSimpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpan2ActionPerformed
        // TODO add your handling code here:
        try {
            if (TFid2.getText().isEmpty() || TFnama2.getText().isEmpty() || TFdurasi.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Harap lengkapi semua data!");
                return; 
            }
            
            String sql = "INSERT INTO proyek (id, nama_proyek, durasi_pengerjaan) VALUES (?, ?, ?)";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, TFid2.getText());
            pst.setString(2, TFnama2.getText());
            pst.setString(3, TFdurasi.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
            updateComboBox1();
            load_data2();
            kosong();
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } 
    }//GEN-LAST:event_btnSimpan2ActionPerformed

    private void btnEdit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit2ActionPerformed
        // TODO add your handling code here:
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id = ?";
                java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, TFnama2.getText());
                pst.setString(2, TFdurasi.getText());
                pst.setString(3, TFid2.getText());

                int rowsUpdated = pst.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
                } else {
                    JOptionPane.showMessageDialog(null, "Data Gagal Diupdate");
                }

                load_data2(); 
                updateComboBox1();
                kosong();     
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnEdit2ActionPerformed

    private void btnDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete2ActionPerformed
        // TODO add your handling code here:
        try {
            String id = TFid2.getText();

            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID belum dipilih. Silakan pilih data terlebih dahulu.");
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM proyek WHERE id = ?";
                    java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                    load_data2();
//                    updateComboBoxIdProyek();
                    kosong();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnDelete2ActionPerformed

    private void tabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabel2MouseClicked

    private void btnCari2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCari2ActionPerformed
        // TODO add your handling code here:
        try {
            load_data(); 
            String sql = "SELECT * FROM proyek WHERE id = ?";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, TFcari2.getText());
            java.sql.ResultSet res = pst.executeQuery();

            if (res.next()) {
                TFid2.setText(res.getString("id"));
                TFnama2.setText(res.getString("nama_proyek"));
                TFdurasi.setText(res.getString("durasi_pengerjaan"));
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCari2ActionPerformed

    private void btnSimpan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpan3ActionPerformed
        // TODO add your handling code here:     
        try {
            String idKaryawan = CBkaryawan.getSelectedItem().toString();  
            String idProyek = CBproyek.getSelectedItem().toString();      

            if (idKaryawan.isEmpty() || idProyek.isEmpty() || TFperan.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Semua data harus diisi!");
                return; 
            }

            String sql = "INSERT INTO transaksi (id_karyawan, id_proyek, peran) VALUES (?, ?, ?)";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, idKaryawan); 
            pst.setString(2, idProyek);     
            pst.setString(3, TFperan.getText());  
            pst.execute();

            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
            load_data3();
            kosong();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSimpan3ActionPerformed

    private void btnDelete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete3ActionPerformed
        // TODO add your handling code here:
        try {
            String id_karyawan = CBkaryawan.getSelectedItem().toString(); 
            String id_proyek = CBproyek.getSelectedItem().toString();    

            if (id_karyawan.isEmpty() || id_proyek.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Karyawan atau ID Proyek belum dipilih. Silakan pilih data terlebih dahulu.");
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM transaksi WHERE id_karyawan = ? AND id_proyek = ?";
                    java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, id_karyawan);
                    pst.setString(2, id_proyek);

                    int rowsDeleted = pst.executeUpdate();
                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                        load_data3();  
                        kosong();      
                    } else {
                        JOptionPane.showMessageDialog(null, "Data gagal dihapus atau tidak ditemukan.");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnDelete3ActionPerformed

    private void btnEdit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit3ActionPerformed
        // TODO add your handling code here:
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE transaksi SET id_proyek = ?, peran = ? WHERE id_karyawan = ?";
                java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                pst.setString(1, CBproyek.getSelectedItem().toString()); 
                pst.setString(2, TFperan.getText());                     
                pst.setString(3, CBkaryawan.getSelectedItem().toString()); 

                int rowsUpdated = pst.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
                } else {
                    JOptionPane.showMessageDialog(null, "Data Gagal Diupdate");
                }

                load_data3();  
                kosong();     
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_btnEdit3ActionPerformed

    private void tabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabel3MouseClicked

    private void btnCari3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCari3ActionPerformed
        // TODO add your handling code here: 
        try {
            load_data3();
            String sql = "SELECT * FROM transaksi WHERE id_karyawan = ?";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, TFcari3.getText());
            java.sql.ResultSet res = pst.executeQuery(); 

            if (res.next()) {
                String id_karyawan = res.getString("id_karyawan");
                CBkaryawan.setSelectedItem(id_karyawan); 

                String id_proyek = res.getString("id_proyek");
                CBproyek.setSelectedItem(id_proyek); 

                String peran = res.getString("peran");
                TFperan.setText(peran); 

            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
                kosong(); 
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCari3ActionPerformed

    private void TFcari2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFcari2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFcari2ActionPerformed

    private void CBkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBkaryawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBkaryawanActionPerformed

//    private void updateComboBoxIdKaryawan() {
//        try {
//            CBkaryawan.removeAllItems(); 
//            String sql = "SELECT id FROM karyawan";
//            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
//            java.sql.Statement stmt = conn.createStatement();
//            java.sql.ResultSet rs = stmt.executeQuery(sql);
//
//            while (rs.next()) {
//                CBkaryawan.addItem(rs.getString("id")); 
//            }
//
//            rs.close();
//            stmt.close();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//        }
//    }
    
//    private void updateComboBoxIdProyek() {
//        try {
//            CBproyek.removeAllItems(); 
//            String sql = "SELECT id FROM proyek";
//            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
//            java.sql.Statement stmt = conn.createStatement();
//            java.sql.ResultSet rs = stmt.executeQuery(sql);
//
//            while (rs.next()) {
//                CBproyek.addItem(rs.getString("id")); 
//            }
//
//            rs.close();
//            stmt.close();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//        }
//    }
    
    private void updateComboBox() {
        try {
            String sql = "SELECT id FROM karyawan"; 
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            java.sql.ResultSet rs = pst.executeQuery();

            CBkaryawan.removeAllItems();

            CBkaryawan.addItem("Silahkan Pilih ID");
            
            while (rs.next()) {
                String id = rs.getString("id"); 
                CBkaryawan.addItem(id);          
            }
            
            CBkaryawan.setSelectedIndex(0); 
             

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    } 


    private void updateComboBox1() {
        try {
            String sql = "SELECT id FROM proyek"; 
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            java.sql.ResultSet rs = pst.executeQuery();

            CBproyek.removeAllItems();
            
            CBproyek.addItem("Silahkan Pilih ID");

            while (rs.next()) {
                String id = rs.getString("id"); 
                CBproyek.addItem(id);           
            }
            
            CBproyek.setSelectedIndex(0); 
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void load_data() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Nama");
        model.addColumn("Jabatan");
        model.addColumn("Departemen");

        try {
            String sql = "SELECT * FROM karyawan";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            int no = 1;
            while (res.next()) {
                model.addRow(new Object[]{
                    no++,
                    res.getString("id"),
                    res.getString("nama"),
                    res.getString("jabatan"),
                    res.getString("departemen")
                });
            }
            tabel1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    
    private void load_data2() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("No");
    model.addColumn("ID");
    model.addColumn("Nama Proyek");
    model.addColumn("Durasi Pekerjaan");

    try {
        String sql = "SELECT * FROM proyek";
        java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);
        int no = 1;
        while (res.next()) {
            String durasi = res.getString("durasi_pengerjaan") + " minggu";
            model.addRow(new Object[]{
                no++,
                res.getString("id"),
                res.getString("nama_proyek"),
                durasi,
            });
        }
        tabel2.setModel(model);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
}

    private void load_data3() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID Karyawan");
        model.addColumn("ID Proyek");
        model.addColumn("Peran");

        try {
            String sql = "SELECT * FROM transaksi";
            java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            int no = 1;
            while (res.next()) {
                model.addRow(new Object[]{
                    no++,
                    res.getString("id_karyawan"),
                    res.getString("id_proyek"),
                    res.getString("peran"),
                });
            }
            tabel3.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void kosong(){
        TFid.setText("");
        TFnama.setText("");
        TFjabatan.setText("");
        TFdepartemen.setText("");
        TFcari.setText("");

        TFid2.setText("");
        TFnama2.setText("");
        TFdurasi.setText("");
        TFcari2.setText("");
        
        TFperan.setText("");
        CBproyek.setSelectedIndex(0); 
        CBkaryawan.setSelectedIndex(0); 
        TFcari3.setText("");
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Design().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBkaryawan;
    private javax.swing.JComboBox<String> CBproyek;
    private javax.swing.JTextField TFcari;
    private javax.swing.JTextField TFcari2;
    private javax.swing.JTextField TFcari3;
    private javax.swing.JTextField TFdepartemen;
    private javax.swing.JTextField TFdurasi;
    private javax.swing.JTextField TFid;
    private javax.swing.JTextField TFid2;
    private javax.swing.JTextField TFjabatan;
    private javax.swing.JTextField TFnama;
    private javax.swing.JTextField TFnama2;
    private javax.swing.JTextField TFperan;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCari2;
    private javax.swing.JButton btnCari3;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete2;
    private javax.swing.JButton btnDelete3;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit2;
    private javax.swing.JButton btnEdit3;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnSimpan2;
    private javax.swing.JButton btnSimpan3;
    private javax.swing.JLabel gambar1;
    private javax.swing.JLabel gambar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDepartemen;
    private javax.swing.JLabel lblDurasiProyek;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblID2;
    private javax.swing.JLabel lblJabatan;
    private javax.swing.JLabel lblJudul1;
    private javax.swing.JLabel lblJudul2;
    private javax.swing.JLabel lblNama;
    private javax.swing.JLabel lblNamaProyek;
    private javax.swing.JLabel lblTransaksi;
    private javax.swing.JTabbedPane panelIsi;
    private javax.swing.JPanel panelJudul;
    private javax.swing.JPanel panelJudul2;
    private javax.swing.JPanel panelKaryawan;
    private javax.swing.JPanel panelProyek;
    private javax.swing.JPanel panelTabel1;
    private javax.swing.JPanel panelTabel2;
    private javax.swing.JPanel panelTransaksi;
    private javax.swing.JPanel panelUtama;
    private javax.swing.JTable tabel1;
    private javax.swing.JTable tabel2;
    private javax.swing.JTable tabel3;
    // End of variables declaration//GEN-END:variables
}
