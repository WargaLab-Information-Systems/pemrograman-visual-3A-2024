package tugasmodul5;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DAVID IMAN FURQONI
 */

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

public class apk extends javax.swing.JFrame {
    Connection koneksi;
    private DefaultTableModel modelKaryawan;
    private DefaultTableModel modelProyek;
    private DefaultTableModel modelTransaksi;

    /**
     * Creates new form 
     */
    public apk() {
        initComponents();
        
        koneksi = Koneksi.getKoneksi();
        
        modelKaryawan = new DefaultTableModel();
        modelKaryawan.addColumn("ID");
        modelKaryawan.addColumn("Nama");
        modelKaryawan.addColumn("Jabatan");
        modelKaryawan.addColumn("Departemen");
        tabelkaryawan.setModel(modelKaryawan);
        
        modelProyek = new DefaultTableModel();
        modelProyek.addColumn("ID");
        modelProyek.addColumn("Nama Proyek");
        modelProyek.addColumn("Durasi");
        tabelproyek.setModel(modelProyek);
        
        modelTransaksi = new DefaultTableModel();
        modelTransaksi.addColumn("id ");
        modelTransaksi.addColumn("id Karyawan");
        modelTransaksi.addColumn("Karyawan");
        modelTransaksi.addColumn("id Proyek");
        modelTransaksi.addColumn("Nama Proyek");
        modelTransaksi.addColumn("Peran");
        tabeltransaksi.setModel(modelTransaksi);
        
        loadDataKaryawan();
        loadDataProyek();
        loadDataTransaksi();
        loadKaryawanComboBox();
        loadProyekComboBox();
        
    }
    
    private void loadDataKaryawan(){
        modelKaryawan.setRowCount(0);
        try{
            String sql = "SELECT * FROM karyawan";
            PreparedStatement stmt = koneksi.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
               modelKaryawan.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("nama"),
                    rs.getString("jabatan"),
                    rs.getString("departemen")
                });
            }
        }catch(SQLException e){
            System.out.println("Erro" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        TabKaryawan = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idkaryawan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        namakaryawan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        departemenkaryawan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jabatankaryawan = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        tambahkaryawan = new javax.swing.JButton();
        hapuskaryawan = new javax.swing.JButton();
        editkaryawan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelkaryawan = new javax.swing.JTable();
        Tabproyek = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idproyek = new javax.swing.JTextField();
        namaproyek = new javax.swing.JTextField();
        durasipengerjaan = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        tambahproyek = new javax.swing.JButton();
        hapusproyek = new javax.swing.JButton();
        editproyek = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelproyek = new javax.swing.JTable();
        TabTransaksi = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        peran = new javax.swing.JTextField();
        combokaryawan = new javax.swing.JComboBox<>();
        comboproyek = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        idtransaksi = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        tambahtransaksi = new javax.swing.JButton();
        hapustransaksi = new javax.swing.JButton();
        edittransaksi = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabeltransaksi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        TabKaryawan.setBackground(new java.awt.Color(0, 153, 204));
        TabKaryawan.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(153, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ID");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 30));

        idkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idkaryawanActionPerformed(evt);
            }
        });
        idkaryawan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idkaryawanKeyTyped(evt);
            }
        });
        jPanel4.add(idkaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 130, 36));

        jLabel2.setText("Nama");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 100, 30));
        jPanel4.add(namakaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 130, 36));

        jLabel3.setText("Departemen");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 130, 30));
        jPanel4.add(departemenkaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 130, 36));

        jLabel4.setText("Jabatan");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 100, 30));
        jPanel4.add(jabatankaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 130, 36));

        TabKaryawan.add(jPanel4, java.awt.BorderLayout.LINE_START);

        jPanel9.setBackground(new java.awt.Color(51, 255, 255));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        tambahkaryawan.setText("Tambah");
        tambahkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahkaryawanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel9.add(tambahkaryawan, gridBagConstraints);

        hapuskaryawan.setText("Hapus");
        hapuskaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapuskaryawanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel9.add(hapuskaryawan, gridBagConstraints);

        editkaryawan.setText("Edit");
        editkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editkaryawanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel9.add(editkaryawan, gridBagConstraints);

        TabKaryawan.add(jPanel9, java.awt.BorderLayout.PAGE_END);

        tabelkaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelkaryawan.setEnabled(false);
        tabelkaryawan.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelkaryawan);

        TabKaryawan.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Karyawan", TabKaryawan);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(102, 255, 102));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("ID");
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, -1, -1));

        jLabel6.setText("Nama Proyek");
        jPanel7.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 92, -1, -1));

        jLabel7.setText("Durasi Pengerjaan");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 169, -1, -1));
        jPanel7.add(idproyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 40, 173, -1));
        jPanel7.add(namaproyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 114, 173, -1));
        jPanel7.add(durasipengerjaan, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 191, 173, -1));

        jPanel6.add(jPanel7, java.awt.BorderLayout.LINE_START);

        jPanel8.setBackground(new java.awt.Color(153, 255, 102));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        tambahproyek.setText("Tambah");
        tambahproyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahproyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel8.add(tambahproyek, gridBagConstraints);

        hapusproyek.setText("Hapus");
        hapusproyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusproyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel8.add(hapusproyek, gridBagConstraints);

        editproyek.setText("Edit");
        editproyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editproyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel8.add(editproyek, gridBagConstraints);

        jPanel6.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        tabelproyek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelproyek.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabelproyek);

        jPanel6.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout TabproyekLayout = new javax.swing.GroupLayout(Tabproyek);
        Tabproyek.setLayout(TabproyekLayout);
        TabproyekLayout.setHorizontalGroup(
            TabproyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TabproyekLayout.setVerticalGroup(
            TabproyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Proyek", Tabproyek);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel11.setBackground(new java.awt.Color(153, 204, 255));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("Peran");
        jPanel11.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        jPanel11.add(peran, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 160, -1));

        jPanel11.add(combokaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, -1));

        jPanel11.add(comboproyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 120, -1));

        jLabel9.setText("Karyawan");
        jPanel11.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel10.setText("Proyek");
        jPanel11.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jLabel11.setText("Id");
        jPanel11.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));
        jPanel11.add(idtransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 160, -1));

        jPanel10.add(jPanel11, java.awt.BorderLayout.LINE_START);

        jPanel12.setBackground(new java.awt.Color(102, 204, 255));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        tambahtransaksi.setText("Tambah");
        tambahtransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahtransaksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel12.add(tambahtransaksi, gridBagConstraints);

        hapustransaksi.setText("Hapus");
        hapustransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapustransaksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel12.add(hapustransaksi, gridBagConstraints);

        edittransaksi.setText("Edit");
        edittransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edittransaksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 17, 38);
        jPanel12.add(edittransaksi, gridBagConstraints);

        jPanel10.add(jPanel12, java.awt.BorderLayout.PAGE_END);

        tabeltransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabeltransaksi.setEnabled(false);
        tabeltransaksi.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tabeltransaksi);

        jPanel10.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout TabTransaksiLayout = new javax.swing.GroupLayout(TabTransaksi);
        TabTransaksi.setLayout(TabTransaksiLayout);
        TabTransaksiLayout.setHorizontalGroup(
            TabTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
        );
        TabTransaksiLayout.setVerticalGroup(
            TabTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Transaksi Proyek", TabTransaksi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tambahkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahkaryawanActionPerformed
        // TODO add your handling code here:                                             
    try{
        String idKaryawan = idkaryawan.getText();
        String sql;

        // Jika ID kosong, gunakan auto-increment
        if(idKaryawan.isEmpty()){
            sql = "INSERT INTO karyawan (nama, jabatan, departemen) VALUES (?, ?, ?)";
        } else {
            sql = "INSERT INTO karyawan (id, nama, jabatan, departemen) VALUES (?, ?, ?, ?)";
        }

        PreparedStatement stmt = koneksi.prepareStatement(sql);

        // Jika ID kosong, jangan set ID
        if(!idKaryawan.isEmpty()){
            stmt.setString(1, idKaryawan);
            stmt.setString(2, namakaryawan.getText());
            stmt.setString(3, jabatankaryawan.getText());
            stmt.setString(4, departemenkaryawan.getText());
        } else {
            stmt.setString(1, namakaryawan.getText());
            stmt.setString(2, jabatankaryawan.getText());
            stmt.setString(3, departemenkaryawan.getText());
        }

        stmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data karyawan berhasil ditambahkan.");
        loadDataKaryawan(); 

    } catch(SQLException e){
        System.out.println("Error: " + e.getMessage());
    }
    }//GEN-LAST:event_tambahkaryawanActionPerformed

    private void editkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editkaryawanActionPerformed
        // TODO add your handling code here:
        try{
            
            String sql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id = ?";
            PreparedStatement stmt = koneksi.prepareStatement(sql);
            stmt.setString(1, namakaryawan.getText());
            stmt.setString(2, jabatankaryawan.getText());
            stmt.setString(3, departemenkaryawan.getText());
            stmt.setString(4, idkaryawan.getText());
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data karyawan berhasil diubah.");
            loadDataKaryawan();
            loadKaryawanComboBox();
        } catch (SQLException e) {
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_editkaryawanActionPerformed

    private void hapuskaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapuskaryawanActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "DELETE FROM karyawan WHERE id = ?";
            PreparedStatement stmt = koneksi.prepareStatement(sql);
            stmt.setInt(1, Integer.parseInt(idkaryawan.getText()));
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data karyawan berhasil dihapus.");
            loadDataKaryawan();
            loadKaryawanComboBox();
        } catch (SQLException e) {
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_hapuskaryawanActionPerformed


private void loadDataProyek(){
    modelProyek.setRowCount(0);

    try{
        String sql = "SELECT * FROM proyek";
        PreparedStatement stmt = koneksi.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();

        while (rs.next()) {
           modelProyek.addRow(new Object[]{
                rs.getInt("id"),
                rs.getString("nama_proyek"),
                rs.getString("durasi_pengerjaan")
            });
        }
    } catch (SQLException e) {
        System.out.println("Error" + e.getMessage());
    }
}    
    
    private void tambahproyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahproyekActionPerformed
        // TODO add your handling code here:
        try {
        String idproyek = this.idproyek.getText();
        String sql;

        // Jika ID proyek diisi, periksa apakah sudah ada
        if (!idproyek.isEmpty()) {
            String checkSql = "SELECT COUNT(*) FROM proyek WHERE id = ?";
            PreparedStatement checkStmt = koneksi.prepareStatement(checkSql);
            checkStmt.setString(1, idproyek);
            ResultSet checkRs = checkStmt.executeQuery();
            
            if (checkRs.next() && checkRs.getInt(1) > 0) {
                JOptionPane.showMessageDialog(this, "ID Proyek sudah tersedia. Silakan gunakan ID yang lain.", "ID Duplikat", JOptionPane.WARNING_MESSAGE);
                return; // Keluar dari metode jika ID sudah ada
            }
        }

        if (idproyek.isEmpty()) {
            sql = "INSERT INTO proyek (nama_proyek, durasi_pengerjaan) VALUES (?, ?)";
        } else {
            sql = "INSERT INTO proyek (id, nama_proyek, durasi_pengerjaan) VALUES (?, ?, ?)";
        }

        PreparedStatement stmt = koneksi.prepareStatement(sql);
        if (idproyek.isEmpty()) {
            stmt.setString(1, namaproyek.getText());
            stmt.setString(2, durasipengerjaan.getText());
        } else {
            stmt.setString(1, idproyek);
            stmt.setString(2, namaproyek.getText());
            stmt.setString(3, durasipengerjaan.getText());
        }

        stmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data Proyek berhasil ditambahkan.");
        loadDataProyek();
        loadProyekComboBox();

    } catch (SQLException e) {
        System.out.println("Error: " + e.getMessage());
    }
    }//GEN-LAST:event_tambahproyekActionPerformed

    private void editproyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editproyekActionPerformed
        // TODO add your handling code here:
        try{
            String sql = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id = ?";
            PreparedStatement stmt = koneksi.prepareStatement(sql);
            stmt.setString(1, namaproyek.getText());
            stmt.setString(2, durasipengerjaan.getText());
            stmt.setInt(3, Integer.parseInt(idproyek.getText()));
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data Proyek berhasil dirubah.");
            loadDataProyek();
            loadProyekComboBox();
        }catch(SQLException e){
            System.out.println("Error" + e.getMessage());
    }
    }//GEN-LAST:event_editproyekActionPerformed

    private void hapusproyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusproyekActionPerformed
        // TODO add your handling code here:
        try{
            String sql = "DELETE from proyek WHERE id = ?";
            PreparedStatement stmt = koneksi.prepareStatement(sql);
            stmt.setInt(1, Integer.parseInt(idproyek.getText()));
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data Proyek berhasil dihapus.");
            loadDataProyek();
            loadProyekComboBox();   
        }catch(SQLException e){
            System.out.println("Error" + e.getMessage());
    }
    }//GEN-LAST:event_hapusproyekActionPerformed


    private void loadDataTransaksi() {
    modelTransaksi.setRowCount(0);
    try {
        String sql = "SELECT \n" +
                     "    transaksi.Id AS Id_transaksi,\n" +
                     "    transaksi.Id_karyawan,\n" +
                     "    karyawan.nama AS nama_karyawan,\n" +
                     "    transaksi.Id_proyek,\n" +
                     "    proyek.nama_proyek AS nama_proyek,\n" +
                     "    transaksi.peran\n" +
                     "FROM \n" +
                     "    transaksi\n" +
                     "JOIN \n" +
                     "    karyawan ON transaksi.Id_karyawan = karyawan.Id\n" +
                     "JOIN \n" +
                     "    proyek ON transaksi.Id_proyek = proyek.Id;";
        
        PreparedStatement ps = koneksi.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            modelTransaksi.addRow(new Object[]{
                rs.getInt("Id_transaksi"),    // Pastikan kolom Id_transaksi ditampilkan
                rs.getInt("Id_karyawan"),
                rs.getString("nama_karyawan"),
                rs.getInt("Id_proyek"),
                rs.getString("nama_proyek"),
                rs.getString("peran")
            });
        }
    } catch (SQLException e) {
        System.out.println("Error Load Data Transaksi: " + e.getMessage());
        JOptionPane.showMessageDialog(null, "Gagal memuat data transaksi: " + e.getMessage());
    }
}
    private void loadKaryawanComboBox(){
    try{
        combokaryawan.removeAllItems();
        String query = "SELECT id, nama FROM karyawan";
        PreparedStatement ps = koneksi.prepareStatement(query);
        ResultSet rs = ps.executeQuery();
       
        while(rs.next()){
            String tampilan = String.format("%d - %s", 
                rs.getInt("id"),
                rs.getString("nama"));
            combokaryawan.addItem(tampilan);
            }
    }catch(SQLException e){
        System.out.println("Error k" + e.getMessage());
    }
}
    private int getSelectedId(String comboBoxText) {
    if (comboBoxText == null || comboBoxText.isEmpty()) return -1;
    try {
        // Format combo box: "1 - Nama"
        return Integer.parseInt(comboBoxText.split(" - ")[0]);
    } catch (Exception e) {
        System.out.println("Error parsing ID: " + e.getMessage());
        return -1;
    }
}
    private void loadProyekComboBox(){
    try{
        comboproyek.removeAllItems();
        String query = "SELECT id, nama_proyek FROM proyek";
        PreparedStatement ps = koneksi.prepareStatement(query);
//        Result rs = st.excecuteQuery(query);
        ResultSet rs = ps.executeQuery();
       
        while(rs.next()){
            String tampilan = String.format("%d - %s", 
                rs.getInt("id"),
                rs.getString("nama_proyek"));
            comboproyek.addItem(tampilan);
    }
    }catch(SQLException e){
        System.out.println("Error p" + e.getMessage());
    }
}
    private void clearTransaksiFields() {
    peran.setText("");
    combokaryawan.setSelectedIndex(0);
    comboproyek.setSelectedIndex(0);
}
    
    private void tambahtransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahtransaksiActionPerformed
        // TODO add your handling code here:                                                
        try {
        if (combokaryawan.getSelectedItem() == null || comboproyek.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Pilih karyawan dan proyek terlebih dahulu");
            return;
        }
        String selectedKaryawan = combokaryawan.getSelectedItem().toString();
        String selectedProyek = comboproyek.getSelectedItem().toString();
        int idKaryawan = getSelectedId(selectedKaryawan);
        int idProyek = getSelectedId(selectedProyek);
        if (idKaryawan == -1 || idProyek == -1) {
            JOptionPane.showMessageDialog(null, "ID Karyawan atau ID Proyek tidak valid");
            return;
        }
        String idTransaksi = idtransaksi.getText();
        String sql;
        if (!idTransaksi.isEmpty()) {
            String checkSql = "SELECT COUNT(*) FROM transaksi WHERE id = ?";
            PreparedStatement checkStmt = koneksi.prepareStatement(checkSql);
            checkStmt.setString(1, idTransaksi);
            ResultSet checkRs = checkStmt.executeQuery();
            
            if (checkRs.next() && checkRs.getInt(1) > 0) {
                JOptionPane.showMessageDialog(this, "ID Transaksi sudah tersedia. Silakan gunakan ID yang lain.", "ID Duplikat", JOptionPane.WARNING_MESSAGE);
                return; 
            }
        }
        if (idTransaksi.isEmpty()) {
            sql = "INSERT INTO transaksi (id_karyawan, id_proyek, peran) VALUES (?, ?, ?)";
        } else {
            sql = "INSERT INTO transaksi (Id, id_karyawan, id_proyek, peran) VALUES (?, ?, ?, ?)";
        }
        PreparedStatement ps = koneksi.prepareStatement(sql);
        if (!idTransaksi.isEmpty()) {
            ps.setInt(1, Integer.parseInt(idTransaksi)); 
            ps.setInt(2, idKaryawan);
            ps.setInt(3, idProyek);
            ps.setString(4, peran.getText().trim());
        } else {
            ps.setInt(1, idKaryawan);
            ps.setInt(2, idProyek);
            ps.setString(3, peran.getText().trim());
        }
        ps.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data Transaksi berhasil ditambahkan.");

        loadDataTransaksi(); 
        loadKaryawanComboBox(); 
        loadProyekComboBox(); 
        clearTransaksiFields();
    } catch (SQLException e) {
        System.out.println("Error Tambah Transaksi: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Gagal menambah data: " + e.getMessage());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID Transaksi harus berupa angka.");
    }
    }//GEN-LAST:event_tambahtransaksiActionPerformed

    private void edittransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edittransaksiActionPerformed
        // TODO add your handling code here:
        try {
        String sql = "UPDATE transaksi SET peran = ? WHERE id_transaksi = ?";
        PreparedStatement ps = koneksi.prepareStatement(sql);
        
        int idKaryawan = getSelectedId(combokaryawan.getSelectedItem().toString());
        int idProyek = getSelectedId(comboproyek.getSelectedItem().toString());
        
        ps.setString(1, peran.getText());
        ps.setInt(2, idKaryawan);
        ps.setInt(3, idProyek);
        ps.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data Transaksi berhasil diperbarui");
        loadDataTransaksi();
    } catch (SQLException e) {
        System.out.println("Kesalahan Memperbarui Data Transaksi: " + e.getMessage());
    }
    }//GEN-LAST:event_edittransaksiActionPerformed

    private void hapustransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapustransaksiActionPerformed
        // TODO add your handling code here:
        try {
        if (combokaryawan.getSelectedItem() == null || comboproyek.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Pilih karyawan dan proyek terlebih dahulu");
            return;
        }

        int idKaryawan = getSelectedId(combokaryawan.getSelectedItem().toString());
        int idProyek = getSelectedId(comboproyek.getSelectedItem().toString());

        int confirm = JOptionPane.showConfirmDialog(this,
                "Apakah Anda yakin ingin menghapus data transaksi ini?",
                "Konfirmasi Hapus",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM transaksi WHERE Id = ? ";
            PreparedStatement ps = koneksi.prepareStatement(sql);
            ps.setInt(1, idKaryawan);
            ps.setInt(2, idProyek);

            int result = ps.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Data Transaksi berhasil dihapus");
                loadDataTransaksi();
                clearTransaksiFields();  
            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan atau sudah terhapus");
            }
        }
    } catch (SQLException e) {
        System.out.println("Kesalahan Menghapus Data Transaksi: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_hapustransaksiActionPerformed

    private void idkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idkaryawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idkaryawanActionPerformed

    private void idkaryawanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idkaryawanKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_idkaryawanKeyTyped

    
    
    
    /**
     * @param args the command line arguments
     */
    
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(apk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(apk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(apk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(apk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new apk().setVisible(true);
            }
        });
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TabKaryawan;
    private javax.swing.JPanel TabTransaksi;
    private javax.swing.JPanel Tabproyek;
    private javax.swing.JComboBox<String> combokaryawan;
    private javax.swing.JComboBox<String> comboproyek;
    private javax.swing.JTextField departemenkaryawan;
    private javax.swing.JTextField durasipengerjaan;
    private javax.swing.JButton editkaryawan;
    private javax.swing.JButton editproyek;
    private javax.swing.JButton edittransaksi;
    private javax.swing.JButton hapuskaryawan;
    private javax.swing.JButton hapusproyek;
    private javax.swing.JButton hapustransaksi;
    private javax.swing.JTextField idkaryawan;
    private javax.swing.JTextField idproyek;
    private javax.swing.JTextField idtransaksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jabatankaryawan;
    private javax.swing.JTextField namakaryawan;
    private javax.swing.JTextField namaproyek;
    private javax.swing.JTextField peran;
    private javax.swing.JTable tabelkaryawan;
    private javax.swing.JTable tabelproyek;
    private javax.swing.JTable tabeltransaksi;
    private javax.swing.JButton tambahkaryawan;
    private javax.swing.JButton tambahproyek;
    private javax.swing.JButton tambahtransaksi;
    // End of variables declaration//GEN-END:variables
}
