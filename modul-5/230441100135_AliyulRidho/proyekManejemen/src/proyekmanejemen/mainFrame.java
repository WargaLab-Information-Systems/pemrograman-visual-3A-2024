/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyekmanejemen;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Ridho
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
        load_table();
        load_table2();
        load_table3();
        load_cbKaryawan();
        load_cbProyek();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKaryawan = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        btnDelete1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnSave1 = new javax.swing.JButton();
        txtNama = new javax.swing.JTextField();
        txtIdKaryawan = new javax.swing.JTextField();
        txtJabatan = new javax.swing.JTextField();
        txtDepartemen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbProyek = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        btnDelete2 = new javax.swing.JButton();
        btnUpdate2 = new javax.swing.JButton();
        btnSave2 = new javax.swing.JButton();
        txtIdProyek = new javax.swing.JTextField();
        txtNamaProyek = new javax.swing.JTextField();
        txtDeadline = new javax.swing.JTextField();
        cariProyek = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        btnCari2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTransaksi = new javax.swing.JTable();
        cbKaryawan = new javax.swing.JComboBox<>();
        cbProyek = new javax.swing.JComboBox<>();
        jPanel13 = new javax.swing.JPanel();
        btnDelete3 = new javax.swing.JButton();
        btnUpdate3 = new javax.swing.JButton();
        btnSave3 = new javax.swing.JButton();
        txtPeran = new javax.swing.JTextField();
        txtTransaksi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(74, 98, 138));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(122, 178, 211));

        jTabbedPane1.setBackground(new java.awt.Color(122, 178, 211));

        jPanel3.setBackground(new java.awt.Color(122, 178, 211));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(122, 178, 211));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        tbKaryawan.setBackground(new java.awt.Color(122, 178, 211));
        tbKaryawan.setFont(new java.awt.Font("Poppins Medium", 0, 10)); // NOI18N
        tbKaryawan.setForeground(new java.awt.Color(74, 98, 138));
        tbKaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKaryawanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbKaryawan);

        jPanel6.add(jScrollPane1);

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 440, 390));

        jPanel7.setBackground(new java.awt.Color(122, 178, 211));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        btnDelete1.setBackground(new java.awt.Color(122, 178, 211));
        btnDelete1.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        btnDelete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/delete-folder.png"))); // NOI18N
        btnDelete1.setBorder(null);
        btnDelete1.setBorderPainted(false);
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });
        jPanel7.add(btnDelete1);

        btnUpdate1.setBackground(new java.awt.Color(122, 178, 211));
        btnUpdate1.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        btnUpdate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/updated.png"))); // NOI18N
        btnUpdate1.setBorder(null);
        btnUpdate1.setBorderPainted(false);
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });
        jPanel7.add(btnUpdate1);

        btnSave1.setBackground(new java.awt.Color(122, 178, 211));
        btnSave1.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        btnSave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/save.png"))); // NOI18N
        btnSave1.setBorder(null);
        btnSave1.setBorderPainted(false);
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });
        jPanel7.add(btnSave1);

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 340, 290, -1));

        txtNama.setBackground(new java.awt.Color(122, 178, 211));
        txtNama.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtNama.setForeground(new java.awt.Color(255, 255, 255));
        txtNama.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNama.setText("Masukkan Nama Anda !!!");
        txtNama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNamaFocusGained(evt);
            }
        });
        jPanel3.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 230, 30));

        txtIdKaryawan.setBackground(new java.awt.Color(122, 178, 211));
        txtIdKaryawan.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtIdKaryawan.setForeground(new java.awt.Color(255, 255, 255));
        txtIdKaryawan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIdKaryawan.setText("Masukkan ID Anda !!!");
        txtIdKaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdKaryawanFocusGained(evt);
            }
        });
        jPanel3.add(txtIdKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 230, 30));

        txtJabatan.setBackground(new java.awt.Color(122, 178, 211));
        txtJabatan.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtJabatan.setForeground(new java.awt.Color(255, 255, 255));
        txtJabatan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtJabatan.setText("Masukkan Jabatan Anda !!!");
        txtJabatan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtJabatanFocusGained(evt);
            }
        });
        jPanel3.add(txtJabatan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 230, 30));

        txtDepartemen.setBackground(new java.awt.Color(122, 178, 211));
        txtDepartemen.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtDepartemen.setForeground(new java.awt.Color(255, 255, 255));
        txtDepartemen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDepartemen.setText("Masukkan Departemen Anda !!!");
        txtDepartemen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDepartemenFocusGained(evt);
            }
        });
        jPanel3.add(txtDepartemen, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 230, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/division.png"))); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        jPanel8.setBackground(new java.awt.Color(122, 178, 211));
        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        btnCari.setBackground(new java.awt.Color(122, 178, 211));
        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/search.png"))); // NOI18N
        btnCari.setBorder(null);
        btnCari.setBorderPainted(false);
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        jPanel8.add(btnCari);

        jPanel3.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 30, 30));

        txtCari.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtCari.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCari.setText("Cari Data Karyawan ( ID )");
        txtCari.setToolTipText("Cari Data Karyawan Dengan Menggunakan ID Karyawan Yang  Valid");
        txtCari.setBorder(null);
        txtCari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCariFocusGained(evt);
            }
        });
        jPanel3.add(txtCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, 30));

        jTabbedPane1.addTab("Data Karyawan", jPanel3);

        jPanel4.setBackground(new java.awt.Color(122, 178, 211));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));

        tbProyek.setBackground(new java.awt.Color(122, 178, 211));
        tbProyek.setFont(new java.awt.Font("Poppins Medium", 0, 10)); // NOI18N
        tbProyek.setForeground(new java.awt.Color(74, 98, 138));
        tbProyek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tbProyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProyekMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbProyek);

        jPanel9.add(jScrollPane4);

        jPanel4.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 440, 390));

        jPanel10.setBackground(new java.awt.Color(122, 178, 211));
        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 0));

        btnDelete2.setBackground(new java.awt.Color(122, 178, 211));
        btnDelete2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/delete-folder.png"))); // NOI18N
        btnDelete2.setBorder(null);
        btnDelete2.setBorderPainted(false);
        btnDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete2ActionPerformed(evt);
            }
        });
        jPanel10.add(btnDelete2);

        btnUpdate2.setBackground(new java.awt.Color(122, 178, 211));
        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/updated.png"))); // NOI18N
        btnUpdate2.setBorder(null);
        btnUpdate2.setBorderPainted(false);
        btnUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate2ActionPerformed(evt);
            }
        });
        jPanel10.add(btnUpdate2);

        btnSave2.setBackground(new java.awt.Color(122, 178, 211));
        btnSave2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/save.png"))); // NOI18N
        btnSave2.setBorder(null);
        btnSave2.setBorderPainted(false);
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });
        jPanel10.add(btnSave2);

        jPanel4.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 250, 30));

        txtIdProyek.setBackground(new java.awt.Color(122, 178, 211));
        txtIdProyek.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtIdProyek.setForeground(new java.awt.Color(255, 255, 255));
        txtIdProyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIdProyek.setText("Masukkan ID Proyek !!!");
        txtIdProyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdProyekFocusGained(evt);
            }
        });
        txtIdProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdProyekActionPerformed(evt);
            }
        });
        jPanel4.add(txtIdProyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 230, -1));

        txtNamaProyek.setBackground(new java.awt.Color(122, 178, 211));
        txtNamaProyek.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtNamaProyek.setForeground(new java.awt.Color(255, 255, 255));
        txtNamaProyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNamaProyek.setText("Masukkan Nama Proyek !!!");
        txtNamaProyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNamaProyekFocusGained(evt);
            }
        });
        jPanel4.add(txtNamaProyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 230, -1));

        txtDeadline.setBackground(new java.awt.Color(122, 178, 211));
        txtDeadline.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtDeadline.setForeground(new java.awt.Color(255, 255, 255));
        txtDeadline.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDeadline.setText("Masukkan Deadline Proyek !!!");
        txtDeadline.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDeadlineFocusGained(evt);
            }
        });
        jPanel4.add(txtDeadline, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 230, -1));

        cariProyek.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cariProyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cariProyek.setText("Cari Proyek  ( ID )");
        cariProyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cariProyekFocusGained(evt);
            }
        });
        jPanel4.add(cariProyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, 30));

        jPanel11.setBackground(new java.awt.Color(122, 178, 211));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));

        btnCari2.setBackground(new java.awt.Color(122, 178, 211));
        btnCari2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/search.png"))); // NOI18N
        btnCari2.setBorder(null);
        btnCari2.setBorderPainted(false);
        btnCari2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCari2ActionPerformed(evt);
            }
        });
        jPanel11.add(btnCari2);

        jPanel4.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 30, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/project-management.png"))); // NOI18N
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 180, 140));

        jTabbedPane1.addTab("Data Proyek", jPanel4);

        jPanel5.setBackground(new java.awt.Color(122, 178, 211));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        tbTransaksi.setBackground(new java.awt.Color(122, 178, 211));
        tbTransaksi.setFont(new java.awt.Font("Poppins Medium", 0, 10)); // NOI18N
        tbTransaksi.setForeground(new java.awt.Color(74, 98, 138));
        tbTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tbTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTransaksiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbTransaksi);

        jPanel12.add(jScrollPane2);

        jPanel5.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 400, 384));

        cbKaryawan.setBackground(new java.awt.Color(122, 178, 211));
        cbKaryawan.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbKaryawan.setForeground(new java.awt.Color(255, 255, 255));
        cbKaryawan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- PILIH KARYAWAN ---" }));
        jPanel5.add(cbKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 260, 30));

        cbProyek.setBackground(new java.awt.Color(122, 178, 211));
        cbProyek.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbProyek.setForeground(new java.awt.Color(255, 255, 255));
        cbProyek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- PILIH PROYEK ---" }));
        jPanel5.add(cbProyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 260, 30));

        jPanel13.setBackground(new java.awt.Color(122, 178, 211));
        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        btnDelete3.setBackground(new java.awt.Color(122, 178, 211));
        btnDelete3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnDelete3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/delete-folder.png"))); // NOI18N
        btnDelete3.setBorder(null);
        btnDelete3.setBorderPainted(false);
        btnDelete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete3ActionPerformed(evt);
            }
        });
        jPanel13.add(btnDelete3);

        btnUpdate3.setBackground(new java.awt.Color(122, 178, 211));
        btnUpdate3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnUpdate3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/updated.png"))); // NOI18N
        btnUpdate3.setBorder(null);
        btnUpdate3.setBorderPainted(false);
        btnUpdate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate3ActionPerformed(evt);
            }
        });
        jPanel13.add(btnUpdate3);

        btnSave3.setBackground(new java.awt.Color(122, 178, 211));
        btnSave3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnSave3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/save.png"))); // NOI18N
        btnSave3.setBorder(null);
        btnSave3.setBorderPainted(false);
        btnSave3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave3ActionPerformed(evt);
            }
        });
        jPanel13.add(btnSave3);

        jPanel5.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 260, 30));

        txtPeran.setBackground(new java.awt.Color(122, 178, 211));
        txtPeran.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtPeran.setForeground(new java.awt.Color(255, 255, 255));
        txtPeran.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPeran.setText("Masukkan Peran Anda !!!");
        txtPeran.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPeranFocusGained(evt);
            }
        });
        jPanel5.add(txtPeran, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 260, 30));

        txtTransaksi.setBackground(new java.awt.Color(122, 178, 211));
        txtTransaksi.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        txtTransaksi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTransaksi.setText("Masukkan ID Transaksi !!!");
        txtTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTransaksiFocusGained(evt);
            }
        });
        jPanel5.add(txtTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 260, 30));

        jLabel5.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(74, 98, 138));
        jLabel5.setText("Transksi Proyek");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/report.png"))); // NOI18N
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        jTabbedPane1.addTab("Transaksi Proyek", jPanel5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 700, 420));

        jLabel2.setFont(new java.awt.Font("Poppins ExtraBold", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(223, 242, 235));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("K O P L A K");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 250, -1));

        jLabel3.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(223, 242, 235));
        jLabel3.setText("Kompilasi Operasi Proyek dan Layanan Amba Karyawan");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/cloud-settings.png"))); // NOI18N
        jLabel7.setText("\n");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/company.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyekmanejemen/time-management.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    ImageIcon iconSukses = new javax.swing.ImageIcon(getClass().getResource("check.png"));
    ImageIcon iconGagal = new javax.swing.ImageIcon(getClass().getResource("cancel.png"));
    ImageIcon iconTanya = new javax.swing.ImageIcon(getClass().getResource("person.png"));
    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        try {
            String idKaryawan = txtIdKaryawan.getText().trim();
            String nama = txtNama.getText().trim();
            String jabatan = txtJabatan.getText().trim();
            String departemen = txtDepartemen.getText().trim();
            if (!idKaryawan.startsWith("AMBA - ")) {
                idKaryawan = "AMBA - " + idKaryawan;
            }
             if (!idKaryawan.matches("^AMBA - \\d{3}$")) {
                JOptionPane.showMessageDialog(null, "ID Karyawan harus dalam format AMBA-XXX, dengan XXX adalah angka tiga digit!","Peringatan", JOptionPane.ERROR_MESSAGE,iconGagal);
                reset();
                return;
            }
            if (!nama.matches("^[a-zA-Z\\s]+$")) {
            JOptionPane.showMessageDialog(null, "Nama hanya boleh berisi huruf dan spasi!","Peringatan", JOptionPane.ERROR_MESSAGE,iconGagal);
            reset();
            return;
            }
            if (!jabatan.matches("^[a-zA-Z\\s]+$")) {
                JOptionPane.showMessageDialog(null, "Jabatan hanya boleh berisi huruf dan spasi!","Peringatan", JOptionPane.ERROR_MESSAGE,iconGagal);
                reset();
                return;
            }
            if (!departemen.matches("^[a-zA-Z\\s]+$")) {
                JOptionPane.showMessageDialog(null, "Departemen hanya boleh berisi huruf dan spasi!","Peringatan", JOptionPane.ERROR_MESSAGE,iconGagal);
                reset();
                return;
            }

            String sql;
            sql = "insert into karyawan values ('"+idKaryawan+"','"+txtNama.getText()+"','"+txtJabatan.getText()+"','"+txtDepartemen.getText()+"')";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);
            load_table();
            load_cbKaryawan();
            reset();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
            reset();
        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        try {
            String idKaryawan = txtIdKaryawan.getText();
            int selectedRow = tbKaryawan.getSelectedRow();

            if (idKaryawan.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Karyawan belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID Karyawan belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset();
            }
            else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM karyawan WHERE id_karyawan = ?";
                    java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, idKaryawan);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);
                    load_table();
                    load_cbKaryawan();
                    load_cbProyek();
                    reset();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void txtIdKaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdKaryawanFocusGained
        // TODO add your handling code here:
        txtIdKaryawan.setText("AMBA - ");
    }//GEN-LAST:event_txtIdKaryawanFocusGained

    private void txtNamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaFocusGained
        // TODO add your handling code here:
        txtNama.setText("");
    }//GEN-LAST:event_txtNamaFocusGained

    private void txtJabatanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJabatanFocusGained
        // TODO add your handling code here:
        txtJabatan.setText("");
    }//GEN-LAST:event_txtJabatanFocusGained

    private void txtDepartemenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDepartemenFocusGained
        // TODO add your handling code here:
        txtDepartemen.setText("");
    }//GEN-LAST:event_txtDepartemenFocusGained

    private void txtCariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCariFocusGained
        // TODO add your handling code here:
        txtCari.setText("AMBA - ");
    }//GEN-LAST:event_txtCariFocusGained

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        try {
             String idKaryawan = txtIdKaryawan.getText();
            int selectedRow = tbKaryawan.getSelectedRow();

            if (idKaryawan.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Karyawan belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID Karyawan belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset();
            }
            else{
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id_karyawan = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

             
                pst.setString(1, txtNama.getText());
                pst.setString(2, txtJabatan.getText());
                pst.setString(3, txtDepartemen.getText());
                pst.setString(4, txtIdKaryawan.getText());

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);

                load_table(); 
                load_cbKaryawan();
                load_cbProyek();
                reset();   
            }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void tbKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKaryawanMouseClicked
        // TODO add your handling code here:
        int row = tbKaryawan.getSelectedRow(); 
        
        
        if (row != -1) {
            txtIdKaryawan.setText(tbKaryawan.getValueAt(row, 0).toString());
            txtCari.setText(tbKaryawan.getValueAt(row, 0).toString());
            txtNama.setText(tbKaryawan.getValueAt(row, 1).toString()); 
            txtJabatan.setText(tbKaryawan.getValueAt(row, 2).toString());
            txtDepartemen.setText(tbKaryawan.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_tbKaryawanMouseClicked

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        try {
            load_table(); 
            String sql = "SELECT * FROM karyawan WHERE id_karyawan = ? ";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, txtCari.getText());
            java.sql.ResultSet res = pst.executeQuery();

            if (res.next()) {
                txtIdKaryawan.setText(res.getString("id_karyawan"));
                txtNama.setText(res.getString("nama"));
                txtJabatan.setText(res.getString("jabatan"));
                txtDepartemen.setText(res.getString("departemen"));
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan","Pemberitahuan", JOptionPane.WARNING_MESSAGE,iconTanya);
            }
            txtCari.setText("Cari Data Karyawan ( ID )");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete2ActionPerformed
        // TODO add your handling code here:
        try {
            String idProyek = txtIdProyek.getText();
            int selectedRow = tbProyek.getSelectedRow();

            if (idProyek.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Proyek belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset2();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID Proyek belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset2();
            }
            else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data proyek ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM proyek WHERE id_proyek = ?";
                    java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, idProyek);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);
                    load_table2();
                    load_cbKaryawan();
                    load_cbProyek();
                    reset2();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_btnDelete2ActionPerformed

    private void txtIdProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdProyekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdProyekActionPerformed

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        // TODO add your handling code here:
        try {
            String idProyek = txtIdProyek.getText().trim();
            String namaProyek = txtNamaProyek.getText().trim();
            String deadLine = txtDeadline.getText().trim();
            if (!idProyek.startsWith("AMBAPR - ")) {
                idProyek = "AMBPR - " + idProyek;
            }
             if (!idProyek.matches("^AMBAPR - \\d{3}$")) {
                JOptionPane.showMessageDialog(null, "ID Proyek harus dalam format AMBAPR - XXX, dengan XXX adalah angka tiga digit!","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset2();
                return;
            }
            if (!namaProyek.matches("^[a-zA-Z\\s]+$")) {
            JOptionPane.showMessageDialog(null, "Nama Proyek hanya boleh berisi huruf dan spasi!","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
            reset2();
            return;
            }
           if (!deadLine.matches("^\\d+$")) { 
            JOptionPane.showMessageDialog(null, "Deadline hanya boleh berisi angka!","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
            reset2();
            return;
            }
           int deadlineInt = Integer.parseInt(deadLine);
           deadLine = deadlineInt + " minggu";
           java.sql.Date tanggalBuat = new java.sql.Date(System.currentTimeMillis());

            String sql;
            sql = "insert into proyek values ('"+idProyek+"','"+namaProyek+"','"+deadLine+"','"+tanggalBuat+"')";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);
            load_table2();
            load_cbKaryawan();
            load_cbProyek();
            reset2();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
            reset();
        }
    }//GEN-LAST:event_btnSave2ActionPerformed

    private void btnUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate2ActionPerformed
        // TODO add your handling code here:
        try {
            String idProyek = txtIdProyek.getText();
            int selectedRow = tbProyek.getSelectedRow();

            if (idProyek.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Proyek belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset2();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID Proyek belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset2();
            }
            else{
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data proyek ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                String sql2 = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id_proyek = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql2);
                
                String namaProyek = txtNamaProyek.getText();
                String deadline = txtDeadline.getText();
                if (deadline.matches("^\\d+$")) {
                deadline = deadline + " minggu";
                }
                
                pst.setString(1, namaProyek);
                pst.setString(2, deadline);
                pst.setString(3, idProyek);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Proyek Berhasil Diupdate","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);

                load_table2(); 
                load_cbKaryawan();
                load_cbProyek();
                reset2();   
            }
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdate2ActionPerformed

    private void tbProyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProyekMouseClicked
        // TODO add your handling code here:
        int row = tbProyek.getSelectedRow(); 
        
        if (row != -1) {
            cariProyek.setText(tbProyek.getValueAt(row, 0).toString());
            txtIdProyek.setText(tbProyek.getValueAt(row, 0).toString());
            txtNamaProyek.setText(tbProyek.getValueAt(row, 1).toString()); 
            txtDeadline.setText(tbProyek.getValueAt(row, 2).toString());
        }
    }//GEN-LAST:event_tbProyekMouseClicked

    private void txtIdProyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdProyekFocusGained
        // TODO add your handling code here:
        txtIdProyek.setText("AMBAPT - ");
    }//GEN-LAST:event_txtIdProyekFocusGained

    private void txtNamaProyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaProyekFocusGained
        // TODO add your handling code here:
        txtNamaProyek.setText("");
    }//GEN-LAST:event_txtNamaProyekFocusGained

    private void txtDeadlineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeadlineFocusGained
        // TODO add your handling code here:
        txtDeadline.setText("");
    }//GEN-LAST:event_txtDeadlineFocusGained

    private void cariProyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cariProyekFocusGained
        // TODO add your handling code here:
        cariProyek.setText("AMBAPT - ");
    }//GEN-LAST:event_cariProyekFocusGained

    private void btnCari2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCari2ActionPerformed
        // TODO add your handling code here:
        try {
            load_table2(); 
            String sql = "SELECT * FROM proyek WHERE id_proyek = ? ";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, cariProyek.getText());
            java.sql.ResultSet res = pst.executeQuery();

            if (res.next()) {
                txtIdProyek.setText(res.getString("id_proyek"));
                txtNamaProyek.setText(res.getString("nama_proyek"));
                txtDeadline.setText(res.getString("durasi_pengerjaan"));
            } 
            else {
                JOptionPane.showMessageDialog(null, "Data proyek tidak ditemukan","Pemberitahuan", JOptionPane.WARNING_MESSAGE,iconTanya);
            }
            txtCari.setText("Cari proyek !!! ( ID )");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCari2ActionPerformed

    private void btnSave3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave3ActionPerformed
        // TODO add your handling code here:
        try {
            String idTransaksi = txtTransaksi.getText().trim();
            if (!idTransaksi.startsWith("AMBATR - ")) {
                idTransaksi = "AMBATR - " + idTransaksi;
            }
            if (!idTransaksi.matches("^AMBATR - \\d{3}$")) {
                JOptionPane.showMessageDialog(null, "ID Transaksi harus dalam format AMBATR - XXX, dengan XXX adalah angka tiga digit!","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                reset2();
                return;
            }
            String pilihanKaryawan = (String) cbKaryawan.getSelectedItem();
            String pilihanProyek = (String) cbProyek.getSelectedItem();
            if (pilihanKaryawan == null || pilihanKaryawan.equals("--- PILIH KARYAWAN ---")) {
                JOptionPane.showMessageDialog(this, "Silakan pilih karyawan.","Peringatan", JOptionPane.WARNING_MESSAGE,iconTanya);
                return;
            }
            if (pilihanProyek == null || pilihanProyek.equals("--- PILIH PROYEK ---")) {
                JOptionPane.showMessageDialog(this, "Silakan pilih proyek.","Peringatan", JOptionPane.WARNING_MESSAGE,iconTanya);
                return;
            }
            String[] parts = pilihanKaryawan.split(",");
            String idKaryawan = parts[0]; 

            String[] parts2 = pilihanProyek.split(",");
            String idProyek = parts2[0];
            String sql = "INSERT INTO transaksi (id_transaksi, id_karyawan, id_proyek, peran) VALUES (?, ?, ?, ?)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            String peranKaryawan = txtPeran.getText().trim();
            if (peranKaryawan.isEmpty() || !peranKaryawan.matches("^[a-zA-Z\\s]+$")) {
                JOptionPane.showMessageDialog(null, "Peran harus diisi dengan huruf dan spasi saja!","Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
                return;
            }


            pst.setString(1, idTransaksi);
            pst.setString(2, idKaryawan);
            pst.setString(3, idProyek);
            pst.setString(4, peranKaryawan);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data transaksi berhasil disimpan.","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);
            load_table3();
            reset3();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnSave3ActionPerformed

    private void btnDelete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete3ActionPerformed
        // TODO add your handling code here:
        try {
            String idTransaksi= txtTransaksi.getText();
            int selectedRow = tbTransaksi.getSelectedRow();

            if (idTransaksi.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Transaksi belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconTanya);
                reset2();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID Transaksi belum dipilih. Silakan pilih data terlebih dahulu.","Peringatan", JOptionPane.WARNING_MESSAGE,iconTanya);
                reset2();
            }
            else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data Transaksi ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM transaksi WHERE id_transaksi = ?";
                    java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, idTransaksi);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus","Pemberitahuan", JOptionPane.INFORMATION_MESSAGE,iconSukses);
                    load_table3();
                    reset3();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnDelete3ActionPerformed

    private void tbTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTransaksiMouseClicked
        // TODO add your handling code here:
        int row = tbTransaksi.getSelectedRow(); 
        
        if (row != -1) {
        txtTransaksi.setText(tbTransaksi.getValueAt(row, 0).toString());
        String idKaryawan = tbTransaksi.getValueAt(row, 1).toString();
        String idProyek = tbTransaksi.getValueAt(row, 2).toString();
        txtPeran.setText(tbTransaksi.getValueAt(row, 3).toString());

        for (int i = 0; i < cbKaryawan.getItemCount(); i++) {
            if (cbKaryawan.getItemAt(i).startsWith(idKaryawan + ",")) {
                cbKaryawan.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 0; i < cbProyek.getItemCount(); i++) {
            if (cbProyek.getItemAt(i).startsWith(idProyek + ",")) {
                cbProyek.setSelectedIndex(i);
                break;
            }
        }
    }
    }//GEN-LAST:event_tbTransaksiMouseClicked

    private void txtTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTransaksiFocusGained
        // TODO add your handling code here:
        txtTransaksi.setText("AMBATR - ");
    }//GEN-LAST:event_txtTransaksiFocusGained

    private void txtPeranFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPeranFocusGained
        // TODO add your handling code here:
        txtPeran.setText("");
    }//GEN-LAST:event_txtPeranFocusGained

    private void btnUpdate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate3ActionPerformed
        // TODO add your handling code here:
        try {
        String idTransaksi = txtTransaksi.getText();
        int selectedRow = tbTransaksi.getSelectedRow();

        if (idTransaksi.isEmpty() || selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "ID Transaksi belum dipilih. Silakan pilih data terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE, iconGagal);
            reset2();
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data transaksi ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            String sql2 = "UPDATE transaksi SET id_karyawan = ?, id_proyek = ?, peran = ? WHERE id_transaksi = ?";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql2);

            String pilihanKaryawan = (String) cbKaryawan.getSelectedItem();
            String pilihanProyek = (String) cbProyek.getSelectedItem();

            if (pilihanKaryawan == null || pilihanKaryawan.equals("--- PILIH KARYAWAN ---")) {
                JOptionPane.showMessageDialog(this, "Silakan pilih karyawan.", "Peringatan", JOptionPane.WARNING_MESSAGE, iconTanya);
                return;
            }

            if (pilihanProyek == null || pilihanProyek.equals("--- PILIH PROYEK ---")) {
                JOptionPane.showMessageDialog(this, "Silakan pilih proyek.", "Peringatan", JOptionPane.WARNING_MESSAGE, iconTanya);
                return;
            }

            String[] parts = pilihanKaryawan.split(",");
            String idKaryawan = parts[0]; 

            String[] parts2 = pilihanProyek.split(",");
            String idProyek = parts2[0];
            String peranan = txtPeran.getText();

            pst.setString(1, idKaryawan);
            pst.setString(2, idProyek);
            pst.setString(3, peranan);
            pst.setString(4, idTransaksi);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Proyek Berhasil Diupdate", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE, iconSukses);

            load_table3(); 
            reset3();   
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }

    }//GEN-LAST:event_btnUpdate3ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCari2;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnDelete2;
    private javax.swing.JButton btnDelete3;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSave3;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnUpdate2;
    private javax.swing.JButton btnUpdate3;
    private javax.swing.JTextField cariProyek;
    private javax.swing.JComboBox<String> cbKaryawan;
    private javax.swing.JComboBox<String> cbProyek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbKaryawan;
    private javax.swing.JTable tbProyek;
    private javax.swing.JTable tbTransaksi;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtDeadline;
    private javax.swing.JTextField txtDepartemen;
    private javax.swing.JTextField txtIdKaryawan;
    private javax.swing.JTextField txtIdProyek;
    private javax.swing.JTextField txtJabatan;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNamaProyek;
    private javax.swing.JTextField txtPeran;
    private javax.swing.JTextField txtTransaksi;
    // End of variables declaration//GEN-END:variables

    private void load_table() {
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama");
        model.addColumn("Jabatan");
        model.addColumn("Departemen");
        try {
            String sql = "select * from karyawan ORDER BY CAST(SUBSTRING(id_karyawan, 8) AS UNSIGNED)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()){
                model.addRow(
                        new Object[]{
                            res.getString("id_karyawan"),
                            res.getString("nama"),
                            res.getString("jabatan"),
                            res.getString("departemen"),
                        }
                );
            }
            tbKaryawan.setModel(model);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void reset() {
    txtIdKaryawan.setText("Masukkan ID Anda !!!");
    txtNama.setText("Masukkan Nama Anda !!!");
    txtJabatan.setText("Masukkan Jabatan Anda !!!");
    txtDepartemen.setText("Masukkan Departemen Anda !!!");
    txtCari.setText("Cari Data Karyawan ( ID )");
    }

    private void load_table2() {
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Proyek");
        model.addColumn("Nama Proyek");
        model.addColumn("Durasi Proyek");
        model.addColumn("Tanggal Dibuat");
        try {
            String sql = "select * from proyek ORDER BY CAST(SUBSTRING(id_proyek, 10) AS UNSIGNED)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()){
                model.addRow(
                        new Object[]{
                            res.getString("id_proyek"),
                            res.getString("nama_proyek"),
                            res.getString("durasi_pengerjaan"),
                            res.getString("tanggal_dibuat")
                        }
                );
            }
            tbProyek.setModel(model);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void reset2() {
        txtIdProyek.setText("Masukkan ID Proyek !!!");
        txtNamaProyek.setText("Masukkan Nama Proyek !!!");
        txtDeadline.setText("Masukkan Deadline Proyek !!!");
        cariProyek.setText("Cari Proyek ( ID )");
    }

    private void load_table3() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Transaksi");
        model.addColumn("ID Karyawan");
        model.addColumn("ID Proyek");
        model.addColumn("Peran");
        try {
            String sql = "select * from transaksi ORDER BY CAST(SUBSTRING(id_proyek, 10) AS UNSIGNED)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()){
                model.addRow(
                        new Object[]{
                            res.getString("id_transaksi"),
                            res.getString("id_karyawan"),
                            res.getString("id_proyek"),
                            res.getString("peran")
                        }
                );
            }
            tbTransaksi.setModel(model);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void load_cbKaryawan() {
    try{
        String sql = "SELECT id_karyawan, nama FROM karyawan";
        java.sql.Connection conn = (Connection) koneksi.getKoneksi();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("--- PILIH KARYAWAN ---");
        
        while (res.next()) {
                String idKaryawan = res.getString("id_karyawan");
                String namaKaryawan = res.getString("nama");
                model.addElement(idKaryawan + " , " + namaKaryawan);
            }
        cbKaryawan.setModel(model);
        
    }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
    }
    
}

    private void load_cbProyek() {
    try{
        String sql = "SELECT id_proyek, nama_proyek FROM proyek";
        java.sql.Connection conn = (Connection) koneksi.getKoneksi();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("--- PILIH PROYEK ---");
        
        while (res.next()) {
                String idProyek = res.getString("id_proyek");
                String namaProyek = res.getString("nama_proyek");
                model.addElement(idProyek + " , " + namaProyek);
            }
        cbProyek.setModel(model);
        
    }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
    }
   }

    private void reset3() {
        txtTransaksi.setText("Masukkan ID Transaksi !!!");
        cbKaryawan.setSelectedIndex(0);
        cbProyek.setSelectedIndex(0);
        txtPeran.setText("Masukkan Peran Anda !!!");
    }
    
}

//Code by : 10111 , 10000111
