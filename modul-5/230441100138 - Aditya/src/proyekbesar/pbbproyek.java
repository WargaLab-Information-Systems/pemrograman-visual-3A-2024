/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyekbesar;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADITYA
 */
public class pbbproyek extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public pbbproyek() {
        initComponents();
        load_cbKaryawan();
        load_cbProyek();
        load_table();
        load_table2();
        load_table3();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        namakaryawan = new javax.swing.JTextField();
        idkaryawan = new javax.swing.JTextField();
        jabatankaryawan = new javax.swing.JTextField();
        departemenkaryawan = new javax.swing.JTextField();
        carikaryawan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelkaryawan = new javax.swing.JTable();
        simpan1 = new javax.swing.JButton();
        hapus1 = new javax.swing.JButton();
        ubah1 = new javax.swing.JButton();
        cari1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        idproyek = new javax.swing.JTextField();
        namaproyek = new javax.swing.JTextField();
        tenggatwaktuproyek = new javax.swing.JTextField();
        cariproyek = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbProyek = new javax.swing.JTable();
        hapus2 = new javax.swing.JButton();
        ubah2 = new javax.swing.JButton();
        simpan2 = new javax.swing.JButton();
        cari2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        pilihkaryawan = new javax.swing.JComboBox<>();
        pilihproyek = new javax.swing.JComboBox<>();
        peran = new javax.swing.JTextField();
        idtransaksi = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTransaksi = new javax.swing.JTable();
        ubah3 = new javax.swing.JButton();
        hapus3 = new javax.swing.JButton();
        simpan3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(19, 62, 135));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(96, 139, 193));

        jTabbedPane1.setBackground(new java.awt.Color(203, 220, 235));
        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(96, 139, 193));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        namakaryawan.setBackground(new java.awt.Color(19, 62, 135));
        namakaryawan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        namakaryawan.setForeground(new java.awt.Color(255, 255, 255));
        namakaryawan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        namakaryawan.setText("Nama!");
        namakaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                namakaryawanFocusGained(evt);
            }
        });
        jPanel3.add(namakaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 230, 30));

        idkaryawan.setBackground(new java.awt.Color(19, 62, 135));
        idkaryawan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        idkaryawan.setForeground(new java.awt.Color(255, 255, 255));
        idkaryawan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idkaryawan.setText("ID!");
        idkaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idkaryawanFocusGained(evt);
            }
        });
        idkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idkaryawanActionPerformed(evt);
            }
        });
        jPanel3.add(idkaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 230, 30));

        jabatankaryawan.setBackground(new java.awt.Color(19, 62, 135));
        jabatankaryawan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jabatankaryawan.setForeground(new java.awt.Color(255, 255, 255));
        jabatankaryawan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jabatankaryawan.setText("Jabatan!");
        jabatankaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jabatankaryawanFocusGained(evt);
            }
        });
        jPanel3.add(jabatankaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 230, 30));

        departemenkaryawan.setBackground(new java.awt.Color(19, 62, 135));
        departemenkaryawan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        departemenkaryawan.setForeground(new java.awt.Color(255, 255, 255));
        departemenkaryawan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        departemenkaryawan.setText("Departemen!");
        departemenkaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                departemenkaryawanFocusGained(evt);
            }
        });
        jPanel3.add(departemenkaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 230, 30));

        carikaryawan.setBackground(new java.awt.Color(203, 220, 235));
        carikaryawan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        carikaryawan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        carikaryawan.setText("Cari Karyawan (ID)");
        carikaryawan.setToolTipText("Cari Data Karyawan Dengan Menggunakan ID Karyawan Yang  Valid");
        carikaryawan.setBorder(null);
        carikaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                carikaryawanFocusGained(evt);
            }
        });
        jPanel3.add(carikaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, 370, 30));

        tabelkaryawan.setBackground(new java.awt.Color(19, 62, 135));
        tabelkaryawan.setFont(new java.awt.Font("Poppins Medium", 0, 10)); // NOI18N
        tabelkaryawan.setForeground(new java.awt.Color(243, 243, 224));
        tabelkaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelkaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelkaryawanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelkaryawan);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 590, 240));

        simpan1.setBackground(new java.awt.Color(243, 243, 224));
        simpan1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        simpan1.setText("Simpan");
        simpan1.setBorder(null);
        simpan1.setBorderPainted(false);
        simpan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpan1ActionPerformed(evt);
            }
        });
        jPanel3.add(simpan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 160, 30));

        hapus1.setBackground(new java.awt.Color(243, 243, 224));
        hapus1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        hapus1.setText("Hapus");
        hapus1.setBorder(null);
        hapus1.setBorderPainted(false);
        hapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus1ActionPerformed(evt);
            }
        });
        jPanel3.add(hapus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 160, 30));

        ubah1.setBackground(new java.awt.Color(243, 243, 224));
        ubah1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ubah1.setText("Ubah");
        ubah1.setBorder(null);
        ubah1.setBorderPainted(false);
        ubah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah1ActionPerformed(evt);
            }
        });
        jPanel3.add(ubah1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 170, 30));

        cari1.setBackground(new java.awt.Color(243, 243, 224));
        cari1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cari1.setText("Cari");
        cari1.setBorder(null);
        cari1.setBorderPainted(false);
        cari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari1ActionPerformed(evt);
            }
        });
        jPanel3.add(cari1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 130, 30));

        jTabbedPane1.addTab("Data Karyawan", jPanel3);

        jPanel4.setBackground(new java.awt.Color(96, 139, 193));
        jPanel4.setLayout(null);

        idproyek.setBackground(new java.awt.Color(19, 62, 135));
        idproyek.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        idproyek.setForeground(new java.awt.Color(255, 255, 255));
        idproyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idproyek.setText("ID!");
        idproyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idproyekFocusGained(evt);
            }
        });
        idproyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idproyekActionPerformed(evt);
            }
        });
        jPanel4.add(idproyek);
        idproyek.setBounds(70, 20, 500, 30);

        namaproyek.setBackground(new java.awt.Color(19, 62, 135));
        namaproyek.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        namaproyek.setForeground(new java.awt.Color(255, 255, 255));
        namaproyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        namaproyek.setText("Nama!");
        namaproyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                namaproyekFocusGained(evt);
            }
        });
        jPanel4.add(namaproyek);
        namaproyek.setBounds(70, 60, 500, 30);

        tenggatwaktuproyek.setBackground(new java.awt.Color(19, 62, 135));
        tenggatwaktuproyek.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tenggatwaktuproyek.setForeground(new java.awt.Color(255, 255, 255));
        tenggatwaktuproyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tenggatwaktuproyek.setText("Tenggat Waktu!");
        tenggatwaktuproyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tenggatwaktuproyekFocusGained(evt);
            }
        });
        jPanel4.add(tenggatwaktuproyek);
        tenggatwaktuproyek.setBounds(70, 100, 500, 30);

        cariproyek.setBackground(new java.awt.Color(203, 220, 235));
        cariproyek.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cariproyek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cariproyek.setText("Cari proyek (ID)");
        cariproyek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cariproyekFocusGained(evt);
            }
        });
        jPanel4.add(cariproyek);
        cariproyek.setBounds(140, 430, 370, 30);

        tbProyek.setBackground(new java.awt.Color(19, 62, 135));
        tbProyek.setFont(new java.awt.Font("Poppins Medium", 0, 10)); // NOI18N
        tbProyek.setForeground(new java.awt.Color(243, 243, 224));
        tbProyek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tbProyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProyekMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbProyek);

        jPanel4.add(jScrollPane4);
        jScrollPane4.setBounds(30, 180, 590, 240);

        hapus2.setBackground(new java.awt.Color(243, 243, 224));
        hapus2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        hapus2.setText("Hapus");
        hapus2.setBorder(null);
        hapus2.setBorderPainted(false);
        hapus2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus2ActionPerformed(evt);
            }
        });
        jPanel4.add(hapus2);
        hapus2.setBounds(70, 140, 160, 30);

        ubah2.setBackground(new java.awt.Color(243, 243, 224));
        ubah2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ubah2.setText("Ubah");
        ubah2.setBorder(null);
        ubah2.setBorderPainted(false);
        ubah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah2ActionPerformed(evt);
            }
        });
        jPanel4.add(ubah2);
        ubah2.setBounds(240, 140, 160, 30);

        simpan2.setBackground(new java.awt.Color(243, 243, 224));
        simpan2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        simpan2.setText("Simpan");
        simpan2.setBorder(null);
        simpan2.setBorderPainted(false);
        simpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpan2ActionPerformed(evt);
            }
        });
        jPanel4.add(simpan2);
        simpan2.setBounds(410, 140, 160, 30);

        cari2.setBackground(new java.awt.Color(243, 243, 224));
        cari2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cari2.setText("Cari");
        cari2.setBorder(null);
        cari2.setBorderPainted(false);
        cari2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari2ActionPerformed(evt);
            }
        });
        jPanel4.add(cari2);
        cari2.setBounds(260, 470, 130, 30);

        jTabbedPane1.addTab("Data Proyek", jPanel4);

        jPanel5.setBackground(new java.awt.Color(96, 139, 193));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pilihkaryawan.setBackground(new java.awt.Color(19, 62, 135));
        pilihkaryawan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pilihkaryawan.setForeground(new java.awt.Color(255, 255, 255));
        pilihkaryawan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Karyawan" }));
        pilihkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihkaryawanActionPerformed(evt);
            }
        });
        jPanel5.add(pilihkaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 230, 30));

        pilihproyek.setBackground(new java.awt.Color(19, 62, 135));
        pilihproyek.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pilihproyek.setForeground(new java.awt.Color(255, 255, 255));
        pilihproyek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Proyek" }));
        jPanel5.add(pilihproyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 230, 30));

        peran.setBackground(new java.awt.Color(19, 62, 135));
        peran.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        peran.setForeground(new java.awt.Color(255, 255, 255));
        peran.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        peran.setText("Peran!");
        peran.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                peranFocusGained(evt);
            }
        });
        jPanel5.add(peran, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 230, 30));

        idtransaksi.setBackground(new java.awt.Color(19, 62, 135));
        idtransaksi.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        idtransaksi.setForeground(new java.awt.Color(255, 255, 255));
        idtransaksi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idtransaksi.setText("ID!");
        idtransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idtransaksiFocusGained(evt);
            }
        });
        idtransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idtransaksiActionPerformed(evt);
            }
        });
        jPanel5.add(idtransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 230, 30));

        tbTransaksi.setBackground(new java.awt.Color(19, 62, 135));
        tbTransaksi.setFont(new java.awt.Font("Poppins Medium", 0, 10)); // NOI18N
        tbTransaksi.setForeground(new java.awt.Color(243, 243, 224));
        tbTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tbTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTransaksiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbTransaksi);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 590, 310));

        ubah3.setBackground(new java.awt.Color(243, 243, 224));
        ubah3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ubah3.setText("Ubah");
        ubah3.setBorder(null);
        ubah3.setBorderPainted(false);
        ubah3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah3ActionPerformed(evt);
            }
        });
        jPanel5.add(ubah3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 170, 30));

        hapus3.setBackground(new java.awt.Color(243, 243, 224));
        hapus3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        hapus3.setText("Hapus");
        hapus3.setBorder(null);
        hapus3.setBorderPainted(false);
        hapus3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus3ActionPerformed(evt);
            }
        });
        jPanel5.add(hapus3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 160, 30));

        simpan3.setBackground(new java.awt.Color(243, 243, 224));
        simpan3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        simpan3.setText("Simpan");
        simpan3.setBorder(null);
        simpan3.setBorderPainted(false);
        simpan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpan3ActionPerformed(evt);
            }
        });
        jPanel5.add(simpan3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 160, 30));

        jTabbedPane1.addTab("Transaksi Proyek", jPanel5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 650, 560));

        jLabel2.setBackground(new java.awt.Color(203, 220, 235));
        jLabel2.setFont(new java.awt.Font("Georgia Pro Cond", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(223, 242, 235));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("P   B   B");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 250, -1));

        jLabel3.setBackground(new java.awt.Color(203, 220, 235));
        jLabel3.setFont(new java.awt.Font("DFKai-SB", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(223, 242, 235));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PROYEK BESAR BRONZELINE");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 300, 30));

        jPanel6.setBackground(new java.awt.Color(243, 243, 224));
        jPanel6.setLayout(new java.awt.CardLayout());
        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 210, 10));

        jPanel7.setBackground(new java.awt.Color(243, 243, 224));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, -1, -1));

        jPanel8.setBackground(new java.awt.Color(243, 243, 224));
        jPanel8.setLayout(new java.awt.CardLayout());
        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 210, 10));

        jPanel9.setBackground(new java.awt.Color(243, 243, 224));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void simpan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpan1ActionPerformed
        // TODO add your handling code here:    
           
            try {
                String idKaryawan = idkaryawan.getText().trim();
                String nama = namakaryawan.getText().trim();
                String jabatan = jabatankaryawan.getText().trim();
                String departemen = departemenkaryawan.getText().trim();
                if (!idKaryawan.startsWith("KARYA - ")) {
                    idKaryawan = "KARYA - " + idKaryawan;
                }
                 if (!idKaryawan.matches("^KARYA - \\d{1}$")) {
                    JOptionPane.showMessageDialog(null, "ID karyawan harus berformat KARYA - X (X = satu angka digit)",
                            "Peringatan",
                            JOptionPane.ERROR_MESSAGE);
                    reset();
                    return;
                }
                if (!nama.matches("^[a-zA-Z\\s]+$")) {
                JOptionPane.showMessageDialog(null, "Nama harus diisi berupa huruf dan Spasi.",
                        "Peringatan",
                        JOptionPane.ERROR_MESSAGE);
                reset();
                return;
                }
                if (!jabatan.matches("^[a-zA-Z\\s]+$")) {
                    JOptionPane.showMessageDialog(null, "Jabatan harus diisi berupa huruf dan Spasi.",
                        "Peringatan",
                        JOptionPane.ERROR_MESSAGE);
                    reset();
                    return;
                }
                if (!departemen.matches("^[a-zA-Z\\s]+$")) {
                    JOptionPane.showMessageDialog(null, "Departemen harus diisi berupa huruf dan Spasi.",
                            "Peringatan",
                            JOptionPane.ERROR_MESSAGE);
                    reset();
                    return;
                }

                String sql;
                sql = "insert into karyawan values ('"+idKaryawan+"','"+namakaryawan.getText()+"','"+jabatankaryawan.getText()+"','"+departemenkaryawan.getText()+"')";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Data disimpan",
                        "Pemberitahuan",
                        JOptionPane.INFORMATION_MESSAGE);
                load_table();
                load_cbKaryawan();
                reset();

            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                reset();
            }
    }//GEN-LAST:event_simpan1ActionPerformed

    private void hapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus1ActionPerformed
        // TODO add your handling code here:
        try {
            String idKaryawan = idkaryawan.getText();
            int selectedRow = tabelkaryawan.getSelectedRow();

            if (idKaryawan.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID karyawan belum dipilih. Silahkan memilih id karyawan terlebih dahulu.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID karyawan belum dipilih. Silakan memilih data karyawan terlebih dahulu.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset();
            }
            else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah kamu yakin ingin menghapus data ini?",
                        "Menghapus data",
                        JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM karyawan WHERE id_karyawan = ?";
                    java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, idKaryawan);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data dihapus",
                            "Pemberitahuan",
                            JOptionPane.INFORMATION_MESSAGE);
                    load_table();
                    load_cbKaryawan();
                    load_cbProyek();
                    reset();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_hapus1ActionPerformed

    private void idkaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idkaryawanFocusGained
        // TODO add your handling code here:
        idkaryawan.setText("KARYA - ");
    }//GEN-LAST:event_idkaryawanFocusGained

    private void namakaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_namakaryawanFocusGained
        // TODO add your handling code here:
        namakaryawan.setText("");
    }//GEN-LAST:event_namakaryawanFocusGained

    private void jabatankaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jabatankaryawanFocusGained
        // TODO add your handling code here:
        jabatankaryawan.setText("");
    }//GEN-LAST:event_jabatankaryawanFocusGained

    private void departemenkaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departemenkaryawanFocusGained
        // TODO add your handling code here:
        departemenkaryawan.setText("");
    }//GEN-LAST:event_departemenkaryawanFocusGained

    private void carikaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_carikaryawanFocusGained
        // TODO add your handling code here:
        carikaryawan.setText("");
    }//GEN-LAST:event_carikaryawanFocusGained

    private void ubah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubah1ActionPerformed
        // TODO add your handling code here:
        try {
             String idKaryawan = idkaryawan.getText();
            int selectedRow = tabelkaryawan.getSelectedRow();

            if (idKaryawan.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Karyawan belum dipilih. Silakan memilih data karyawan terlebih dahulu.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID Karyawan belum dipilih. Silakan memilih data karyawan terlebih dahulu.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset();
            }
            else{
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah kamu yakin ingin mengubah data ini?",
                        "Mengubah data",
                        JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id_karyawan = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

             
                pst.setString(1, namakaryawan.getText());
                pst.setString(2, jabatankaryawan.getText());
                pst.setString(3, departemenkaryawan.getText());
                pst.setString(4, idkaryawan.getText());

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data diperbarui",
                        "Pemberitahuan",
                        JOptionPane.INFORMATION_MESSAGE);

                load_table(); 
                load_cbKaryawan();
                load_cbProyek();
                reset();   
            }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_ubah1ActionPerformed

    private void tabelkaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelkaryawanMouseClicked
        // TODO add your handling code here:
        int row = tabelkaryawan.getSelectedRow(); 
        
        
        if (row != -1) {
            idkaryawan.setText(tabelkaryawan.getValueAt(row, 0).toString());
            carikaryawan.setText(tabelkaryawan.getValueAt(row, 0).toString());
            namakaryawan.setText(tabelkaryawan.getValueAt(row, 1).toString()); 
            jabatankaryawan.setText(tabelkaryawan.getValueAt(row, 2).toString());
            departemenkaryawan.setText(tabelkaryawan.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_tabelkaryawanMouseClicked

    private void cari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari1ActionPerformed
        // TODO add your handling code here:
        try {
            load_table(); 
            String sql = "SELECT * FROM karyawan WHERE id_karyawan = ? ";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, carikaryawan.getText());
            java.sql.ResultSet res = pst.executeQuery();

            if (res.next()) {
                idkaryawan.setText(res.getString("id_karyawan"));
                namakaryawan.setText(res.getString("nama"));
                jabatankaryawan.setText(res.getString("jabatan"));
                departemenkaryawan.setText(res.getString("departemen"));
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan",
                        "Pemberitahuan",
                        JOptionPane.WARNING_MESSAGE);
            }
            carikaryawan.setText("Cari karyawan (ID)");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_cari1ActionPerformed

    private void hapus2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus2ActionPerformed
        // TODO add your handling code here:
        try {
            String idProyek = idproyek.getText();
            int selectedRow = tbProyek.getSelectedRow();

            if (idProyek.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID proyek belum dipilih. Silakan memilih id proyek terlebih dahulu.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset2();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID proyek belum dipilih. Silakan memilih id proyek terlebih dahulu.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset2();
            }
            else {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah kamu yakin ingin menghapus data proyek ini?",
                        "Menghapus data",
                        JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String sql = "DELETE FROM proyek WHERE id_proyek = ?";
                    java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, idProyek);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data dihapus",
                            "Pemberitahuan",
                            JOptionPane.INFORMATION_MESSAGE);
                    load_table2();
                    load_cbKaryawan();
                    load_cbProyek();
                    reset2();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_hapus2ActionPerformed

    private void idproyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idproyekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idproyekActionPerformed

    private void simpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpan2ActionPerformed
        // TODO add your handling code here:

        try {
            String idProyek = idproyek.getText().trim();
            String namaProyek = namaproyek.getText().trim();
            String deadLine = tenggatwaktuproyek.getText().trim();
            if (!idProyek.startsWith("PRYK - ")) {
                idProyek = "PRYK - " + idProyek;
            }
             if (!idProyek.matches("^PRYK - \\d{1}$")) {
                JOptionPane.showMessageDialog(null, "ID proyek harus berformat PRYK - X (X = satu angka digit)",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset2();
                return;
            }
            if (!namaProyek.matches("^[a-zA-Z\\s]+$")) {
            JOptionPane.showMessageDialog(null, "Nama proyek harus diisi berupa huruf dan spasi!",
                    "Peringatan", 
                    JOptionPane.WARNING_MESSAGE);
            reset2();
            return;
            }
           if (!deadLine.matches("^\\d+$")) { 
            JOptionPane.showMessageDialog(null, "Tenggat waktu harus diisi berupa angka!",
                    "Peringatan", 
                    JOptionPane.WARNING_MESSAGE);
            reset2();
            return;
            }
           int deadlineInt = Integer.parseInt(deadLine);
           deadLine = deadlineInt + " minggu";
           java.sql.Date tanggalBuat = new java.sql.Date(System.currentTimeMillis());

            String sql;
            sql = "insert into proyek values ('"+idProyek+"','"+namaProyek+"','"+deadLine+"','"+tanggalBuat+"')";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data disimpan",
                    "Pemberitahuan",
                    JOptionPane.INFORMATION_MESSAGE);
            load_table2();
            load_cbKaryawan();
            load_cbProyek();
            reset2();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
            reset();
        }
    }//GEN-LAST:event_simpan2ActionPerformed

    private void ubah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubah2ActionPerformed
        // TODO add your handling code here:
        try {
            String idProyek = idproyek.getText();
            int selectedRow = tbProyek.getSelectedRow();

            if (idProyek.isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID proyek belum dipilih. Silakan memilih ID proyek terlebih dahulu.",
                        "Peringatan", 
                        JOptionPane.WARNING_MESSAGE);
                reset2();
            } if(selectedRow == -1){
                JOptionPane.showMessageDialog(null, "ID proyek belum dipilih. Silakan memilih ID proyek terlebih dahulu.",
                        "Peringatan", 
                        JOptionPane.WARNING_MESSAGE);
                reset2();
            }
            else{
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah kamu yakin ingin megubah data proyek ini?", 
                        "Mengubah Proyek", 
                        JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                String sql2 = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id_proyek = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql2);
                
                String namaProyek = namaproyek.getText();
                String deadline = tenggatwaktuproyek.getText();
                if (deadline.matches("^\\d+$")) {
                deadline = deadline + " minggu";
                }
                
                pst.setString(1, namaProyek);
                pst.setString(2, deadline);
                pst.setString(3, idProyek);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data proyek diupdate",
                        "Pemberitahuan",
                        JOptionPane.INFORMATION_MESSAGE);

                load_table2(); 
                load_cbKaryawan();
                load_cbProyek();
                reset2();   
            }
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_ubah2ActionPerformed

    private void tbProyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProyekMouseClicked
        // TODO add your handling code here:
        int row = tbProyek.getSelectedRow(); 
        
        if (row != -1) {
            cariproyek.setText(tbProyek.getValueAt(row, 0).toString());
            idproyek.setText(tbProyek.getValueAt(row, 0).toString());
            namaproyek.setText(tbProyek.getValueAt(row, 1).toString()); 
            tenggatwaktuproyek.setText(tbProyek.getValueAt(row, 2).toString());
        }
    }//GEN-LAST:event_tbProyekMouseClicked

    private void idproyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idproyekFocusGained
        // TODO add your handling code here:
        idproyek.setText("PRYK - ");
    }//GEN-LAST:event_idproyekFocusGained

    private void namaproyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_namaproyekFocusGained
        // TODO add your handling code here:
        namaproyek.setText("");
    }//GEN-LAST:event_namaproyekFocusGained

    private void tenggatwaktuproyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tenggatwaktuproyekFocusGained
        // TODO add your handling code here:
        tenggatwaktuproyek.setText("");
    }//GEN-LAST:event_tenggatwaktuproyekFocusGained

    private void cariproyekFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cariproyekFocusGained
        // TODO add your handling code here:
        cariproyek.setText("");
    }//GEN-LAST:event_cariproyekFocusGained

    private void cari2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari2ActionPerformed
        // TODO add your handling code here:
        try {
            load_table2(); 
            String sql = "SELECT * FROM proyek WHERE id_proyek = ? ";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, cariproyek.getText());
            java.sql.ResultSet res = pst.executeQuery();

            if (res.next()) {
                idproyek.setText(res.getString("id_proyek"));
                namaproyek.setText(res.getString("nama_proyek"));
                tenggatwaktuproyek.setText(res.getString("durasi_pengerjaan"));
            } 
            else {
                JOptionPane.showMessageDialog(null, "Data proyek tidak ditemukan",
                        "Pemberitahuan", 
                        JOptionPane.WARNING_MESSAGE);
            }
            carikaryawan.setText("Cari proyek (ID)");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_cari2ActionPerformed

    private void simpan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpan3ActionPerformed
        // TODO add your handling code here:
        
        try {
            String idTransaksi = idtransaksi.getText().trim();
            if (!idTransaksi.startsWith("TRAN - ")) {
                idTransaksi = "TRAN - " + idTransaksi;
            }
            if (!idTransaksi.matches("^TRAN - \\d{1}$")) {
                JOptionPane.showMessageDialog(null, "ID transaksi harus berformat TRAN - X (X = satu angka digit)",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                reset2();
                return;
            }
            String pilihanKaryawan = (String) pilihkaryawan.getSelectedItem();
            String pilihanProyek = (String) pilihproyek.getSelectedItem();
            if (pilihanKaryawan == null || pilihanKaryawan.equals("Pilih karyawan")) {
                JOptionPane.showMessageDialog(this, "Silakan memilih karyawan.",
                        "Peringatan", 
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (pilihanProyek == null || pilihanProyek.equals("Pilih proyek")) {
                JOptionPane.showMessageDialog(this, "Silakan memilih proyek.",
                        "Peringatan", 
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
            String[] parts = pilihanKaryawan.split(",");
            String idKaryawan = parts[0]; 

            String[] parts2 = pilihanProyek.split(",");
            String idProyek = parts2[0];
            String sql = "INSERT INTO transaksi (id_transaksi, id_karyawan, id_proyek, peran) VALUES (?, ?, ?, ?)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            String peranKaryawan = peran.getText().trim();
            if (peranKaryawan.isEmpty() || !peranKaryawan.matches("^[a-zA-Z\\s]+$")) {
                JOptionPane.showMessageDialog(null, "Peran harus diisi berupa huruf dan spasi.",
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }


            pst.setString(1, idTransaksi);
            pst.setString(2, idKaryawan);
            pst.setString(3, idProyek);
            pst.setString(4, peranKaryawan);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data transaksi disimpan.",
                    "Pemberitahuan",
                    JOptionPane.INFORMATION_MESSAGE);
            load_table3();
            reset3();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ada kesalahan: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_simpan3ActionPerformed

    private void hapus3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus3ActionPerformed
        // TODO add your handling code here:
        
        try {
    String idTransaksi = idtransaksi.getText();
    int selectedRow = tbTransaksi.getSelectedRow();

    // Validasi input ID Transaksi dan baris yang dipilih
    if (idTransaksi.isEmpty() || selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "ID transaksi belum dipilih. Silakan memilih ID transaksi terlebih dahulu.",
                "Peringatan", JOptionPane.WARNING_MESSAGE);
        reset2();  // Pastikan reset2() didefinisikan
    } else {
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah kamu yakin ingin menghapus data transaksi ini?",
                "Menghapus data", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM transaksi WHERE id_transaksi = ?";
            // Pastikan koneksi dan PreparedStatement tidak null
            try (java.sql.Connection conn = koneksi.getKoneksi();
                 java.sql.PreparedStatement pst = conn.prepareStatement(sql)) {

                pst.setString(1, idTransaksi);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data dihapus",
                        "Pemberitahuan",
                        JOptionPane.INFORMATION_MESSAGE);

                // Reload table dan reset tampilan
                load_table3();  // Pastikan load_table3() didefinisikan
                reset3();  // Pastikan reset3() didefinisikan
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Terjadi Error ketika menghapus data: " + ex.getMessage(),
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Ada kesalahan: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
}
        
    }//GEN-LAST:event_hapus3ActionPerformed

    private void idtransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idtransaksiFocusGained
        // TODO add your handling code here:
        idtransaksi.setText("TRAN - ");
    }//GEN-LAST:event_idtransaksiFocusGained

    private void peranFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_peranFocusGained
        // TODO add your handling code here:
        peran.setText("");
    }//GEN-LAST:event_peranFocusGained

    private void ubah3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubah3ActionPerformed
        // TODO add your handling code here:
        try {
        String idTransaksi = idtransaksi.getText();
        int selectedRow = tbTransaksi.getSelectedRow();

        if (idTransaksi.isEmpty() || selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "ID Transaksi belum dipilih. Silakan memilih ID transaksi terlebih dahulu.", 
                    "Peringatan", 
                    JOptionPane.WARNING_MESSAGE);
            reset2();
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, "Apakah kamu yakin ingin mengubah data transaksi ini?", 
                "Mengubah data transaksi",
                JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            String sql2 = "UPDATE transaksi SET id_karyawan = ?, id_proyek = ?, peran = ? WHERE id_transaksi = ?";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql2);

            String pilihanKaryawan = (String) pilihkaryawan.getSelectedItem();
            String pilihanProyek = (String) pilihproyek.getSelectedItem();

            if (pilihanKaryawan == null || pilihanKaryawan.equals("Pilih karyawan")) {
                JOptionPane.showMessageDialog(this, "Silakan memilih karyawan.", 
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (pilihanProyek == null || pilihanProyek.equals("Pilih proyek")) {
                JOptionPane.showMessageDialog(this, "Silakan memilih proyek.", 
                        "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            String[] parts = pilihanKaryawan.split(",");
            String idKaryawan = parts[0]; 

            String[] parts2 = pilihanProyek.split(",");
            String idProyek = parts2[0];
            String peranan = peran.getText();

            pst.setString(1, idKaryawan);
            pst.setString(2, idProyek);
            pst.setString(3, peranan);
            pst.setString(4, idTransaksi);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Proyek dirubah", 
                    "Pemberitahuan", 
                    JOptionPane.INFORMATION_MESSAGE);

            load_table3(); 
            reset3();   
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }

    }//GEN-LAST:event_ubah3ActionPerformed

    private void tbTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTransaksiMouseClicked
        // TODO add your handling code here:
        int row = tbTransaksi.getSelectedRow();

        if (row != -1) {
            idtransaksi.setText(tbTransaksi.getValueAt(row, 0).toString());
            String idKaryawan = tbTransaksi.getValueAt(row, 1).toString();
            String idProyek = tbTransaksi.getValueAt(row, 2).toString();
            peran.setText(tbTransaksi.getValueAt(row, 3).toString());

            for (int i = 0; i < pilihkaryawan.getItemCount(); i++) {
                if (pilihkaryawan.getItemAt(i).startsWith(idKaryawan + ",")) {
                    pilihkaryawan.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 0; i < pilihproyek.getItemCount(); i++) {
                if (pilihproyek.getItemAt(i).startsWith(idProyek + ",")) {
                    pilihproyek.setSelectedIndex(i);
                    break;
                }
            }
        }
    }//GEN-LAST:event_tbTransaksiMouseClicked

    private void idtransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idtransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idtransaksiActionPerformed

    private void pilihkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihkaryawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pilihkaryawanActionPerformed

    private void idkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idkaryawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idkaryawanActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pbbproyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pbbproyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pbbproyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pbbproyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pbbproyek().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari1;
    private javax.swing.JButton cari2;
    private javax.swing.JTextField carikaryawan;
    private javax.swing.JTextField cariproyek;
    private javax.swing.JTextField departemenkaryawan;
    private javax.swing.JButton hapus1;
    private javax.swing.JButton hapus2;
    private javax.swing.JButton hapus3;
    private javax.swing.JTextField idkaryawan;
    private javax.swing.JTextField idproyek;
    private javax.swing.JTextField idtransaksi;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jabatankaryawan;
    private javax.swing.JTextField namakaryawan;
    private javax.swing.JTextField namaproyek;
    private javax.swing.JTextField peran;
    private javax.swing.JComboBox<String> pilihkaryawan;
    private javax.swing.JComboBox<String> pilihproyek;
    private javax.swing.JButton simpan1;
    private javax.swing.JButton simpan2;
    private javax.swing.JButton simpan3;
    private javax.swing.JTable tabelkaryawan;
    private javax.swing.JTable tbProyek;
    private javax.swing.JTable tbTransaksi;
    private javax.swing.JTextField tenggatwaktuproyek;
    private javax.swing.JButton ubah1;
    private javax.swing.JButton ubah2;
    private javax.swing.JButton ubah3;
    // End of variables declaration//GEN-END:variables

    private void load_table() {
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama");
        model.addColumn("Jabatan");
        model.addColumn("Departemen");
        try {
            String sql = "select * from karyawan ORDER BY CAST(SUBSTRING(id_karyawan, 8) AS UNSIGNED)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()){
                model.addRow(
                        new Object[]{
                            res.getString("id_karyawan"),
                            res.getString("nama"),
                            res.getString("jabatan"),
                            res.getString("departemen"),
                        }
                );
            }
            tabelkaryawan.setModel(model);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void reset() {
    idkaryawan.setText("Masukkan ID Anda !!!");
    namakaryawan.setText("Masukkan Nama Anda !!!");
    jabatankaryawan.setText("Masukkan Jabatan Anda !!!");
    departemenkaryawan.setText("Masukkan Departemen Anda !!!");
    carikaryawan.setText("Cari Data Karyawan ( ID )");
    }

    private void load_table2() {
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Proyek");
        model.addColumn("Nama Proyek");
        model.addColumn("Durasi Proyek");
        model.addColumn("Tanggal Dibuat");
        try {
            String sql = "select * from proyek ORDER BY CAST(SUBSTRING(id_proyek, 10) AS UNSIGNED)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()){
                model.addRow(
                        new Object[]{
                            res.getString("id_proyek"),
                            res.getString("nama_proyek"),
                            res.getString("durasi_pengerjaan"),
                            res.getString("tanggal_dibuat")
                        }
                );
            }
            tbProyek.setModel(model);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void reset2() {
        idproyek.setText("ID!");
        namaproyek.setText("Nama!");
        tenggatwaktuproyek.setText("Tenggat Waktu!");
        cariproyek.setText("Cari proyek (ID)");
    }

    private void load_table3() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Transaksi");
        model.addColumn("ID Karyawan");
        model.addColumn("ID Proyek");
        model.addColumn("Peran");
        try {
            String sql = "select * from transaksi ORDER BY CAST(SUBSTRING(id_proyek, 10) AS UNSIGNED)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()){
                model.addRow(
                        new Object[]{
                            res.getString("id_transaksi"),
                            res.getString("id_karyawan"),
                            res.getString("id_proyek"),
                            res.getString("peran")
                        }
                );
            }
            tbTransaksi.setModel(model);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void load_cbKaryawan() {
    try{
        String sql = "SELECT id_karyawan, nama FROM karyawan";
        java.sql.Connection conn = (Connection) koneksi.getKoneksi();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("Pilih karyawan");
        
        while (res.next()) {
                String idKaryawan = res.getString("id_karyawan");
                String namaKaryawan = res.getString("nama");
                model.addElement(idKaryawan + " , " + namaKaryawan);
            }
        pilihkaryawan.setModel(model);
        
    }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
    }
    
}

    private void load_cbProyek() {
    try{
        String sql = "SELECT id_proyek, nama_proyek FROM proyek";
        java.sql.Connection conn = (Connection) koneksi.getKoneksi();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("Pilih proyek");
        
        while (res.next()) {
                String idProyek = res.getString("id_proyek");
                String namaProyek = res.getString("nama_proyek");
                model.addElement(idProyek + " , " + namaProyek);
            }
        pilihproyek.setModel(model);
        
    }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
    }
   }

    private void reset3() {
        idtransaksi.setText("ID!");
        pilihkaryawan.setSelectedIndex(0);
        pilihproyek.setSelectedIndex(0);
        peran.setText("Peran!");
    }
    
}


