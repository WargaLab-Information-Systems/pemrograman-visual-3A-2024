/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import ModulLima.koneksi;

public class karyawan extends javax.swing.JFrame {


    public karyawan() {
        initComponents();
        load_karyawan();
        load_projek();
        load_transaksi();
        loadComboBoxKaryawan(); // Memuat data ke combo box karyawan
        loadComboBoxProyek();   // Memuat data ke combo box proyek
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        LabelIdKaryawan = new javax.swing.JLabel();
        LabelNamaKaryawan = new javax.swing.JLabel();
        LabelJabatan = new javax.swing.JLabel();
        LabelDepartemen = new javax.swing.JLabel();
        txtIdKaryawan = new javax.swing.JTextField();
        txtNamaKaryawan = new javax.swing.JTextField();
        txtJabatan = new javax.swing.JTextField();
        txtDepartemen = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        LabelFormKaryawan = new javax.swing.JLabel();
        LabelTblKaryawan = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKaryawan = new javax.swing.JTable();
        btnCreateKaryawan = new javax.swing.JButton();
        btnUpdateKaryawan = new javax.swing.JButton();
        btnDeleteKaryawan = new javax.swing.JButton();
        btnResetKaryawan = new javax.swing.JButton();
        btnExitKaryawan = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        LabelIdProyek = new javax.swing.JLabel();
        LabelNamaProyek = new javax.swing.JLabel();
        LabelDurasi = new javax.swing.JLabel();
        txtIdProyek = new javax.swing.JTextField();
        txtNamaProyek = new javax.swing.JTextField();
        txtDurasiPengerjaan = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        LabelFormProyek = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        LabelTblProyek = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProyek = new javax.swing.JTable();
        btnCreateProyek = new javax.swing.JButton();
        btnUpdateProyek = new javax.swing.JButton();
        btnDeleteProyek = new javax.swing.JButton();
        btnResetProyek = new javax.swing.JButton();
        btnExitProyek = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtPeran = new javax.swing.JTextField();
        cbIdKaryawan = new javax.swing.JComboBox<>();
        cbIdProyek = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        LabelFormTransaksi = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        LabelTransaksi = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTransaksi = new javax.swing.JTable();
        btnCreateTransaksi = new javax.swing.JButton();
        btnUpdateTransaksi = new javax.swing.JButton();
        btnDeleteTransaksi = new javax.swing.JButton();
        btnResetTransaksi = new javax.swing.JButton();
        btnExitTransaksi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(153, 0, 51));

        jPanel3.setBackground(new java.awt.Color(255, 204, 153));

        LabelIdKaryawan.setText("Id Karyawan  :");

        LabelNamaKaryawan.setText("Nama Karyawan :");

        LabelJabatan.setText("Jabatan         :");

        LabelDepartemen.setText("Departemen :");

        txtIdKaryawan.setBackground(new java.awt.Color(255, 255, 204));
        txtIdKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdKaryawanMouseClicked(evt);
            }
        });

        txtNamaKaryawan.setBackground(new java.awt.Color(255, 255, 204));
        txtNamaKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaKaryawanActionPerformed(evt);
            }
        });

        txtJabatan.setBackground(new java.awt.Color(255, 255, 204));

        txtDepartemen.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(LabelIdKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(txtIdKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(LabelDepartemen, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(txtDepartemen, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelJabatan)
                            .addComponent(LabelNamaKaryawan))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNamaKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LabelIdKaryawan))
                    .addComponent(txtIdKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LabelNamaKaryawan))
                    .addComponent(txtNamaKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LabelJabatan))
                    .addComponent(txtJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LabelDepartemen))
                    .addComponent(txtDepartemen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 204, 204));

        LabelFormKaryawan.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        LabelFormKaryawan.setText("----Form Karyawan----");
        jPanel5.add(LabelFormKaryawan);

        LabelTblKaryawan.setBackground(new java.awt.Color(255, 153, 153));
        LabelTblKaryawan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel6.setText("----Tabel Karyawan----");
        LabelTblKaryawan.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel7.setBackground(new java.awt.Color(255, 153, 51));
        jPanel7.setLayout(new java.awt.BorderLayout());

        tblKaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKaryawanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKaryawan);

        jPanel7.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        btnCreateKaryawan.setText("Create");
        btnCreateKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateKaryawanActionPerformed(evt);
            }
        });

        btnUpdateKaryawan.setText("Update");
        btnUpdateKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateKaryawanActionPerformed(evt);
            }
        });

        btnDeleteKaryawan.setText("Delete");
        btnDeleteKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteKaryawanMouseClicked(evt);
            }
        });
        btnDeleteKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteKaryawanActionPerformed(evt);
            }
        });

        btnResetKaryawan.setText("Reset");
        btnResetKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetKaryawanActionPerformed(evt);
            }
        });

        btnExitKaryawan.setText("Exit");
        btnExitKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitKaryawanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnCreateKaryawan)
                        .addGap(73, 73, 73)
                        .addComponent(btnUpdateKaryawan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteKaryawan))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(btnResetKaryawan)
                        .addGap(88, 88, 88)
                        .addComponent(btnExitKaryawan)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(LabelTblKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelTblKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreateKaryawan)
                            .addComponent(btnUpdateKaryawan)
                            .addComponent(btnDeleteKaryawan))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetKaryawan)
                            .addComponent(btnExitKaryawan))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Form Karyawan", jPanel1);

        jPanel9.setBackground(new java.awt.Color(153, 0, 51));

        jPanel10.setBackground(new java.awt.Color(255, 204, 153));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        LabelIdProyek.setText("Id Proyek      :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 34, 0, 0);
        jPanel10.add(LabelIdProyek, gridBagConstraints);

        LabelNamaProyek.setText("Nama Proyek:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 34, 0, 0);
        jPanel10.add(LabelNamaProyek, gridBagConstraints);

        LabelDurasi.setText("Durasi Pengerjaan :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 34, 0, 0);
        jPanel10.add(LabelDurasi, gridBagConstraints);

        txtIdProyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdProyekMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 111;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 35, 0, 19);
        jPanel10.add(txtIdProyek, gridBagConstraints);

        txtNamaProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaProyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 111;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 35, 0, 19);
        jPanel10.add(txtNamaProyek, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 111;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 35, 0, 19);
        jPanel10.add(txtDurasiPengerjaan, gridBagConstraints);

        jPanel11.setBackground(new java.awt.Color(255, 204, 204));

        LabelFormProyek.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        LabelFormProyek.setText("----Form Proyek----");
        jPanel11.add(LabelFormProyek);

        jPanel12.setBackground(new java.awt.Color(255, 153, 153));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LabelTblProyek.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        LabelTblProyek.setText("----Tabel Proyek----");
        jPanel12.add(LabelTblProyek, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jPanel13.setBackground(new java.awt.Color(255, 153, 51));
        jPanel13.setLayout(new java.awt.BorderLayout());

        tblProyek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProyekMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProyek);

        btnCreateProyek.setText("Create");
        btnCreateProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProyekActionPerformed(evt);
            }
        });

        btnUpdateProyek.setText("Update");
        btnUpdateProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProyekActionPerformed(evt);
            }
        });

        btnDeleteProyek.setText("Delete");
        btnDeleteProyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteProyekMouseClicked(evt);
            }
        });
        btnDeleteProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProyekActionPerformed(evt);
            }
        });

        btnResetProyek.setText("Reset");
        btnResetProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetProyekActionPerformed(evt);
            }
        });

        btnExitProyek.setText("Exit");
        btnExitProyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitProyekActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(btnCreateProyek)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdateProyek)
                                .addGap(63, 63, 63)
                                .addComponent(btnDeleteProyek)
                                .addGap(10, 10, 10))
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(btnResetProyek)
                        .addGap(76, 76, 76)
                        .addComponent(btnExitProyek)))
                .addGap(2, 2, 2)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreateProyek)
                            .addComponent(btnUpdateProyek)
                            .addComponent(btnDeleteProyek))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetProyek)
                            .addComponent(btnExitProyek))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Form Proyek", jPanel9);

        jPanel14.setBackground(new java.awt.Color(153, 0, 51));

        jPanel15.setBackground(new java.awt.Color(255, 204, 153));

        jLabel13.setText("Id Karyawan  :");

        jLabel14.setText("Id Proyek      :");

        jLabel15.setText("Peran            :");

        txtPeran.setBackground(new java.awt.Color(255, 255, 204));

        cbIdKaryawan.setBackground(new java.awt.Color(255, 255, 204));
        cbIdKaryawan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbIdKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbIdKaryawanMouseClicked(evt);
            }
        });
        cbIdKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIdKaryawanActionPerformed(evt);
            }
        });

        cbIdProyek.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPeran)
                    .addComponent(cbIdKaryawan, 0, 175, Short.MAX_VALUE)
                    .addComponent(cbIdProyek, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel13))
                    .addComponent(cbIdKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cbIdProyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtPeran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 204, 204));

        LabelFormTransaksi.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        LabelFormTransaksi.setText("-----Form Transaksi----");
        jPanel16.add(LabelFormTransaksi);

        jPanel17.setBackground(new java.awt.Color(255, 153, 153));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LabelTransaksi.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        LabelTransaksi.setText("----Tabel Transaksi----");
        jPanel17.add(LabelTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jPanel18.setBackground(new java.awt.Color(255, 153, 51));
        jPanel18.setLayout(new java.awt.BorderLayout());

        tblTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTransaksiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblTransaksi);

        jPanel18.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        btnCreateTransaksi.setText("Create");
        btnCreateTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTransaksiActionPerformed(evt);
            }
        });

        btnUpdateTransaksi.setText("Update");
        btnUpdateTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTransaksiActionPerformed(evt);
            }
        });

        btnDeleteTransaksi.setText("Delete");
        btnDeleteTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteTransaksiMouseClicked(evt);
            }
        });
        btnDeleteTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTransaksiActionPerformed(evt);
            }
        });

        btnResetTransaksi.setText("Reset");
        btnResetTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetTransaksiActionPerformed(evt);
            }
        });

        btnExitTransaksi.setText("Exit");
        btnExitTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnCreateTransaksi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdateTransaksi)
                        .addGap(56, 56, 56)
                        .addComponent(btnDeleteTransaksi)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(btnResetTransaksi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExitTransaksi)
                        .addGap(47, 47, 47)))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreateTransaksi)
                            .addComponent(btnUpdateTransaksi)
                            .addComponent(btnDeleteTransaksi))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetTransaksi)
                            .addComponent(btnExitTransaksi))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Form Transaksi", jPanel14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaProyekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaProyekActionPerformed

    private void txtNamaKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaKaryawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaKaryawanActionPerformed

    
    private void btnCreateKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateKaryawanActionPerformed
       // TODO add your handling code here:
    // Validasi input kosong sebelum melanjutkan
    if (txtNamaKaryawan.getText().isEmpty() || txtJabatan.getText().isEmpty() || txtDepartemen.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Harap isi semua kolom sebelum menyimpan.");
        return;
    }

    // Menampilkan konfirmasi awal
    int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda ingin menambahkan data?", "Konfirmasi Tambah Data", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Menampilkan informasi agar pengguna siap mengisi data
        JOptionPane.showMessageDialog(null, "Silakan isi data yang tertera.");

        // Menonaktifkan tombol lain
        btnDeleteKaryawan.setEnabled(false);
        btnUpdateKaryawan.setEnabled(false);
        btnResetKaryawan.setEnabled(false);
        btnExitKaryawan.setEnabled(false);

        // Menonaktifkan pengeditan ID Karyawan
        txtIdKaryawan.setEditable(false);

        // Mengisi ID Karyawan secara otomatis
        try {
            String sql = "SELECT MAX(id) FROM karyawan";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement st = conn.createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                int lastId = rs.getInt(1);
                txtIdKaryawan.setText(String.valueOf(lastId + 1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saat mengisi Id otomatis: " + e.getMessage());
            return;
        }

        // Simpan data ke database
        try {
            String sql = "INSERT INTO karyawan (id, nama, jabatan, departemen) VALUES (?, ?, ?, ?)";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            // Mengisi parameter PreparedStatement
            pst.setString(1, txtIdKaryawan.getText());
            pst.setString(2, txtNamaKaryawan.getText());
            pst.setString(3, txtJabatan.getText());
            pst.setString(4, txtDepartemen.getText());

            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");

            // Refresh tabel dan kosongkan form
            load_karyawan();
            kosong();

            // Mengaktifkan kembali tombol lain setelah data tersimpan
            btnDeleteKaryawan.setEnabled(true);
            btnUpdateKaryawan.setEnabled(true);
            btnResetKaryawan.setEnabled(true);
            btnExitKaryawan.setEnabled(true);

            // Tetap menonaktifkan pengeditan ID Karyawan
            txtIdKaryawan.setEditable(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan data: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnCreateKaryawanActionPerformed

    private void btnUpdateKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateKaryawanActionPerformed
        // TODO add your handling code here:
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                // Isi parameter PreparedStatement
                pst.setString(1, txtNamaKaryawan.getText());
                pst.setString(2, txtJabatan.getText());
                pst.setString(3, txtDepartemen.getText());
                pst.setString(4, txtIdKaryawan.getText()); // ID tetap sebagai parameter terakhir

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");

                // Refresh tabel dan kosongkan form
                load_karyawan(); 
                kosong();

                // Aktifkan kembali pengeditan ID setelah pembaruan (jika perlu)
                txtIdKaryawan.setEditable(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateKaryawanActionPerformed

    private void btnDeleteKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteKaryawanActionPerformed
        // TODO add your handling code here:
    // Periksa apakah ada baris yang dipilih
    int row = tblKaryawan.getSelectedRow();
    if (row != -1) {
        // Menampilkan konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Mendapatkan ID karyawan dari kolom yang sesuai (misalnya kolom ke-0)
                String id = tblKaryawan.getValueAt(row, 0).toString();

                // Query SQL untuk menghapus data berdasarkan ID
                String sql = "DELETE FROM karyawan WHERE id = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, id);

                int deleted = pst.executeUpdate();
                if (deleted > 0) {
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");

                    // Hapus baris dari tampilan tabel tanpa memuat ulang seluruh data
                    ((DefaultTableModel) tblKaryawan.getModel()).removeRow(row);
                    kosong(); // Kosongkan form input
                } else {
                    JOptionPane.showMessageDialog(null, "Data gagal dihapus. Pastikan data masih ada di database.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
            }
        }
    } else {
        // Jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus terlebih dahulu");    
    }//GEN-LAST:event_btnDeleteKaryawanActionPerformed
   // private void btnHapusMouseClicked(java.awt.event.MouseEvent evt) {                                      

    }
    private void btnResetKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetKaryawanActionPerformed
        // TODO add your handling code here:
            // Tampilkan dialog konfirmasi sebelum mereset data
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin mereset data ini?", "Konfirmasi Reset", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            kosong(); // Hapus data di form jika pengguna menekan "Yes"
            JOptionPane.showMessageDialog(null, "Data berhasil direset.");
        }
    }//GEN-LAST:event_btnResetKaryawanActionPerformed

    private void btnExitKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitKaryawanActionPerformed
        // TODO add your handling code here:
            // Tampilkan dialog konfirmasi sebelum keluar
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            dispose(); // Menutup jendela jika pengguna memilih "Yes"
        }
    }//GEN-LAST:event_btnExitKaryawanActionPerformed

    
//    ---- FORM PROYEK ----  
    
    
    private void btnCreateProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProyekActionPerformed
        // TODO add your handling code here:
        // Validasi input kosong
        if (txtIdProyek.getText().isEmpty() || txtNamaProyek.getText().isEmpty() ||
            txtDurasiPengerjaan.getText().isEmpty() ||
            txtDurasiPengerjaan.getText().equals("Isi durasi dalam hitungan minggu")) {
            JOptionPane.showMessageDialog(null, "Harap isi semua kolom sebelum menyimpan.");
            return;
        }

        // Validasi input ID hanya angka
        if (!txtIdProyek.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "ID Proyek harus berupa angka dan tidak boleh mengandung huruf atau simbol.");
            return;
        }

        // Simpan data ke database
        try {
            String sql = "insert into proyek values ('" + txtIdProyek.getText() + "','" +
                         txtNamaProyek.getText() + "','" + txtDurasiPengerjaan.getText() + "')";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
            load_projek();
            kosong();

            // Generate ID proyek baru setelah data disimpan
            generateIdProyek();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCreateProyekActionPerformed

    private void btnUpdateProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProyekActionPerformed
        // TODO add your handling code here:
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                // Isi parameter PreparedStatement
                pst.setString(1, txtNamaProyek.getText());
                pst.setString(2, txtDurasiPengerjaan.getText());
                pst.setString(3, txtIdProyek.getText());


                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");

                // Refresh tabel dan kosongkan form
                load_projek(); 
                kosong();

                // Aktifkan kembali pengeditan ID setelah pembaruan (jika perlu)
                txtIdProyek.setEditable(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateProyekActionPerformed

    private void btnDeleteProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProyekActionPerformed
        // Periksa apakah ada baris yang dipilih
    int row = tblProyek.getSelectedRow();
    if (row != -1) {
        // Menampilkan konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Mendapatkan ID proyek dari kolom pertama (pastikan indeks kolom sesuai)
                String id = tblProyek.getValueAt(row, 0).toString(); // Pastikan ini sesuai dengan kolom ID proyek

                // Query SQL untuk menghapus data berdasarkan ID
                String sql = "DELETE FROM proyek WHERE id = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, id);

                int deleted = pst.executeUpdate();
                if (deleted > 0) {
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");

                    // Hapus baris dari tampilan tabel tanpa memuat ulang seluruh data
                    ((DefaultTableModel) tblProyek.getModel()).removeRow(row);
                    kosong(); // Kosongkan form input
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan atau gagal dihapus.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
            }
        }
    } else {
        // Jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus terlebih dahulu");
    }
                                             

   // private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {                                       
 
    }//GEN-LAST:event_btnDeleteProyekActionPerformed

    private void btnResetProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetProyekActionPerformed
        // TODO add your handling code here:
        // Tampilkan dialog konfirmasi sebelum mereset data
       int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin mereset data ini?", "Konfirmasi Reset", JOptionPane.YES_NO_OPTION);

       if (confirm == JOptionPane.YES_OPTION) {
           kosong(); // Hapus data di form jika pengguna menekan "Yes"
           JOptionPane.showMessageDialog(null, "Data berhasil direset.");
       }
    }//GEN-LAST:event_btnResetProyekActionPerformed

    private void btnExitProyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitProyekActionPerformed
        // TODO add your handling code here:
           // Tampilkan dialog konfirmasi sebelum keluar
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            dispose(); // Menutup jendela jika pengguna memilih "Yes"
        }
    }//GEN-LAST:event_btnExitProyekActionPerformed

//    ----Form Transaksi----
    
    
    private void btnCreateTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTransaksiActionPerformed
        // TODO add your handling code here:
        // Validasi input kosong
        if (cbIdKaryawan.getSelectedItem() == null || cbIdProyek.getSelectedItem() == null || 
            txtPeran.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Harap isi semua kolom sebelum menyimpan.");
            return;
        }

        // Simpan data ke database
        try {
            String sql = "insert into transaksi values ('" + cbIdKaryawan.getSelectedItem() + "','" + 
                         cbIdProyek.getSelectedItem() + "','" + txtPeran.getText() + "')";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
            load_transaksi();
            kosong();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCreateTransaksiActionPerformed

    private void btnUpdateTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTransaksiActionPerformed
        // TODO add your handling code here:
        try {
            // Tampilkan konfirmasi sebelum menyimpan perubahan
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan perubahan data ini?", "Konfirmasi Perubahan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "UPDATE transaksi SET id_proyek = ?, peran = ? WHERE id_karyawan = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                // Isi parameter PreparedStatement dengan data dari combo box dan text field
                pst.setString(1, cbIdProyek.getSelectedItem().toString()); // ID proyek dari combo box
                pst.setString(2, txtPeran.getText()); // Peran dari text field
                pst.setString(3, cbIdKaryawan.getSelectedItem().toString()); // ID karyawan dari combo box

                pst.executeUpdate(); // Eksekusi query update
                JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");

                // Refresh tabel dan kosongkan form
                load_transaksi();
                kosong(); // Bersihkan input form
            }
        } catch (Exception e) {
            // Tampilkan pesan kesalahan jika terjadi exception
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateTransaksiActionPerformed

    private void btnDeleteTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTransaksiActionPerformed
    // Periksa apakah ada baris yang dipilih
    int row = tblTransaksi.getSelectedRow();
    if (row != -1) {
        // Menampilkan konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Mendapatkan ID karyawan dan ID proyek dari kolom yang sesuai di tabel
                String idKaryawan = tblTransaksi.getValueAt(row, 0).toString(); // Pastikan indeks kolom benar
                String idProyek = tblTransaksi.getValueAt(row, 1).toString();   // Pastikan indeks kolom benar

                // Query SQL untuk menghapus data berdasarkan ID karyawan dan proyek
                String sql = "DELETE FROM transaksi WHERE id_karyawan = ? AND id_proyek = ?";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, idKaryawan);
                pst.setString(2, idProyek);

                int deleted = pst.executeUpdate();
                if (deleted > 0) {
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");

                    // Hapus baris dari tampilan tabel tanpa memuat ulang seluruh data
                    ((DefaultTableModel) tblTransaksi.getModel()).removeRow(row);
                    kosong(); // Kosongkan form input
                } else {
                    JOptionPane.showMessageDialog(null, "Data gagal dihapus. Pastikan data masih ada di database.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
            }
        }
    } else {
        // Jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus terlebih dahulu");
    }
                                                    
    }//GEN-LAST:event_btnDeleteTransaksiActionPerformed

    private void btnResetTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetTransaksiActionPerformed
        // TODO add your handling code here:
        // Tampilkan dialog konfirmasi sebelum mereset data
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin mereset data ini?", "Konfirmasi Reset", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            kosong(); // Hapus data di form jika pengguna menekan "Yes"
            JOptionPane.showMessageDialog(null, "Data berhasil direset.");
        }       
    }//GEN-LAST:event_btnResetTransaksiActionPerformed

    private void btnExitTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitTransaksiActionPerformed
        // TODO add your handling code here:
           // Tampilkan dialog konfirmasi sebelum keluar
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            dispose(); // Menutup jendela jika pengguna memilih "Yes"
        }
    }//GEN-LAST:event_btnExitTransaksiActionPerformed

    private void cbIdKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIdKaryawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbIdKaryawanActionPerformed

    private void tblKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKaryawanMouseClicked
        // TODO add your handling code here:
        int row = tblKaryawan.getSelectedRow();
        if (row != -1) {
            txtIdKaryawan.setText(tblKaryawan.getValueAt(row, 0).toString()); // ID Karyawan
            txtNamaKaryawan.setText(tblKaryawan.getValueAt(row, 1).toString()); // Nama Karyawan
            txtJabatan.setText(tblKaryawan.getValueAt(row, 2).toString()); // Jabatan
            txtDepartemen.setText(tblKaryawan.getValueAt(row, 3).toString()); // Departemen

            // Nonaktifkan text field ID agar tidak bisa diubah
            txtIdKaryawan.setEditable(false);
        }
    }//GEN-LAST:event_tblKaryawanMouseClicked

    private void tblProyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProyekMouseClicked
        // TODO add your handling code here:
        int row = tblProyek.getSelectedRow();
        if (row != -1) {
            txtIdProyek.setText(tblProyek.getValueAt(row, 0).toString()); // ID proyek
            txtNamaProyek.setText(tblProyek.getValueAt(row, 1).toString()); // Nama proyek
            txtDurasiPengerjaan.setText(tblProyek.getValueAt(row, 2).toString()); // durasi pengerjaan
 

            // Nonaktifkan text field ID agar tidak bisa diubah
            txtIdProyek.setEditable(false);
        }
    }//GEN-LAST:event_tblProyekMouseClicked

    private void tblTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTransaksiMouseClicked
        // TODO add your handling code here:
        int row = tblTransaksi.getSelectedRow();
        if (row != -1) {
            cbIdKaryawan.setSelectedItem(tblTransaksi.getValueAt(row, 0).toString()); // ID proyek
            cbIdProyek.setSelectedItem(tblTransaksi.getValueAt(row, 1).toString()); // Nama proyek
            txtPeran.setText(tblTransaksi.getValueAt(row, 2).toString()); // durasi pengerjaan
 
        }
    }//GEN-LAST:event_tblTransaksiMouseClicked

    private void cbIdKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbIdKaryawanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbIdKaryawanMouseClicked

    private void txtIdKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdKaryawanMouseClicked
        // TODO add your handling code here:
        // Menambahkan event listener langsung ke JTextField ID Karyawan di inisialisasi awal
        txtIdKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateIdKaryawan(); // Panggil metode untuk mengisi ID Karyawan saat diklik
                txtIdKaryawan.setEditable(true); // Aktifkan pengeditan saat diklik
                JOptionPane.showMessageDialog(null, "Pengeditan ID Karyawan diaktifkan.");
            }
        });
        
    }//GEN-LAST:event_txtIdKaryawanMouseClicked

    private void btnDeleteKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteKaryawanMouseClicked
        // TODO add your handling code here:
        // Menampilkan data baris yang diklik ke dalam TextField
        int row = tblKaryawan.getSelectedRow();

        if (row != -1) {
            txtIdKaryawan.setText(tblKaryawan.getValueAt(row, 0).toString());
            txtNamaKaryawan.setText(tblKaryawan.getValueAt(row, 1).toString());
            txtJabatan.setText(tblKaryawan.getValueAt(row, 2).toString());
            txtDepartemen.setText(tblKaryawan.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_btnDeleteKaryawanMouseClicked

    private void btnDeleteProyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteProyekMouseClicked
    // Periksa apakah ada baris yang dipilih di tabel proyek
    int row = tblProyek.getSelectedRow(); 

    if (row != -1) {
        // Mengisi text field dengan data dari baris yang dipilih (pastikan indeks kolom sesuai)
        txtIdProyek.setText(tblProyek.getValueAt(row, 0).toString()); // Pastikan indeks kolom untuk ID proyek benar
        txtNamaProyek.setText(tblProyek.getValueAt(row, 1).toString()); // Nama proyek
        txtDurasiPengerjaan.setText(tblProyek.getValueAt(row, 2).toString()); // Durasi pengerjaan
    } else {
        // Tampilkan pesan jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin ditampilkan terlebih dahulu");
    }
    }//GEN-LAST:event_btnDeleteProyekMouseClicked

    private void btnDeleteTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteTransaksiMouseClicked
        // TODO add your handling code here:
        // Periksa apakah ada baris yang dipilih di tabel transaksi
    int row = tblTransaksi.getSelectedRow(); 

    if (row != -1) {
        // Mengisi combo box dan text field dengan data yang dipilih di tabel
        cbIdKaryawan.setSelectedItem(tblTransaksi.getValueAt(row, 0).toString()); // Pastikan indeks kolom benar
        cbIdProyek.setSelectedItem(tblTransaksi.getValueAt(row, 1).toString());   // Pastikan indeks kolom benar
        txtPeran.setText(tblTransaksi.getValueAt(row, 2).toString());             // Pastikan indeks kolom benar
    } else {
        // Jika tidak ada baris yang dipilih, tampilkan pesan peringatan
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus terlebih dahulu");
    }
    }//GEN-LAST:event_btnDeleteTransaksiMouseClicked

    private void txtIdProyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdProyekMouseClicked
        // TODO add your handling code here:
        // Menambahkan event listener langsung ke JTextField ID Proyek di inisialisasi awal
        txtIdProyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateIdProyek(); // Panggil metode untuk mengisi ID Proyek saat diklik
                txtIdProyek.setEditable(true); // Aktifkan pengeditan saat diklik
                JOptionPane.showMessageDialog(null, "Pengeditan ID Proyek diaktifkan.");
            }
        });
    }//GEN-LAST:event_txtIdProyekMouseClicked

    

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new karyawan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelDepartemen;
    private javax.swing.JLabel LabelDurasi;
    private javax.swing.JLabel LabelFormKaryawan;
    private javax.swing.JLabel LabelFormProyek;
    private javax.swing.JLabel LabelFormTransaksi;
    private javax.swing.JLabel LabelIdKaryawan;
    private javax.swing.JLabel LabelIdProyek;
    private javax.swing.JLabel LabelJabatan;
    private javax.swing.JLabel LabelNamaKaryawan;
    private javax.swing.JLabel LabelNamaProyek;
    private javax.swing.JPanel LabelTblKaryawan;
    private javax.swing.JLabel LabelTblProyek;
    private javax.swing.JLabel LabelTransaksi;
    private javax.swing.JButton btnCreateKaryawan;
    private javax.swing.JButton btnCreateProyek;
    private javax.swing.JButton btnCreateTransaksi;
    private javax.swing.JButton btnDeleteKaryawan;
    private javax.swing.JButton btnDeleteProyek;
    private javax.swing.JButton btnDeleteTransaksi;
    private javax.swing.JButton btnExitKaryawan;
    private javax.swing.JButton btnExitProyek;
    private javax.swing.JButton btnExitTransaksi;
    private javax.swing.JButton btnResetKaryawan;
    private javax.swing.JButton btnResetProyek;
    private javax.swing.JButton btnResetTransaksi;
    private javax.swing.JButton btnUpdateKaryawan;
    private javax.swing.JButton btnUpdateProyek;
    private javax.swing.JButton btnUpdateTransaksi;
    private javax.swing.JComboBox<String> cbIdKaryawan;
    private javax.swing.JComboBox<String> cbIdProyek;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable tblKaryawan;
    private javax.swing.JTable tblProyek;
    private javax.swing.JTable tblTransaksi;
    private javax.swing.JTextField txtDepartemen;
    private javax.swing.JTextField txtDurasiPengerjaan;
    private javax.swing.JTextField txtIdKaryawan;
    private javax.swing.JTextField txtIdProyek;
    private javax.swing.JTextField txtJabatan;
    private javax.swing.JTextField txtNamaKaryawan;
    private javax.swing.JTextField txtNamaProyek;
    private javax.swing.JTextField txtPeran;
    // End of variables declaration//GEN-END:variables

    private void load_karyawan() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Karyawan");
        model.addColumn("Nama");
        model.addColumn("Jabatan");
        model.addColumn("Departemen");

        try {
            String sql = "SELECT id, nama, jabatan, departemen FROM karyawan";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                // Masukkan data sesuai urutan kolom di database
                model.addRow(new Object[]{
                    res.getString("id"),        // ID karyawan
                    res.getString("nama"),      // Nama karyawan
                    res.getString("jabatan"),   // Jabatan karyawan
                    res.getString("departemen") // Departemen karyawan
                });
            }
            tblKaryawan.setModel(model); // Set model setelah loop selesai
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void load_projek() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Proyek");
        model.addColumn("Nama Proyek");
        model.addColumn("Durasi Pengerjaan(mingguan)");
  

        try {
            String sql = "SELECT id, nama_proyek, durasi_pengerjaan FROM proyek";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                // Masukkan data sesuai urutan kolom di database
                model.addRow(new Object[]{
                    res.getString("id"),        // ID proyek
                    res.getString("nama_proyek"),      // Nama proyek
                    res.getString("durasi_pengerjaan")   // durasi pengerjaan

                });
            }
            tblProyek.setModel(model); // Set model setelah loop selesai
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void kosong() {
        // Karyawan
        txtIdKaryawan.setText("");
        txtNamaKaryawan.setText("");
        txtJabatan.setText("");
        txtDepartemen.setText("");

        // Proyek
        txtIdProyek.setText("");
        txtNamaProyek.setText("");
        txtDurasiPengerjaan.setText("");

        // Transaksi
        txtPeran.setText("");

        // Set combobox ke pilihan pertama (indeks 0)
        cbIdKaryawan.setSelectedIndex(0);
        cbIdProyek.setSelectedIndex(0);

        // Mengatur text field ID Karyawan agar bisa diedit jika diperlukan
        txtIdKaryawan.setEditable(true);
        txtIdProyek.setEditable(true);
        cbIdKaryawan.setEditable(true);
        cbIdProyek.setEditable(true);
    }

    private void load_transaksi() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Karyawan");
        model.addColumn("ID Proyek");
        model.addColumn("Peran");


        try {
            String sql = "SELECT id_karyawan, id_proyek, peran FROM transaksi";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                // Masukkan data sesuai urutan kolom di database
                model.addRow(new Object[]{
                    res.getString("id_karyawan"),        // ID karyawan
                    res.getString("id_proyek"),      // id projek karyawan
                    res.getString("peran")   // peran karyawan
                 
                });
            }
            tblTransaksi.setModel(model); // Set model setelah loop selesai
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    
    }

    private void loadComboBoxKaryawan() {
        try {
            String sql = "SELECT id FROM karyawan";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            cbIdKaryawan.removeAllItems(); // Kosongkan combo box terlebih dahulu
            while (res.next()) {
                cbIdKaryawan.addItem(res.getString("id")); // Tambahkan ID karyawan ke combo box
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void loadComboBoxProyek() {
        try {
            String sql = "SELECT id FROM proyek";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            cbIdProyek.removeAllItems(); // Kosongkan combo box terlebih dahulu
            while (res.next()) {
                cbIdProyek.addItem(res.getString("id")); // Tambahkan ID proyek ke combo box
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void generateIdKaryawan() {
        try {
            String sql = "SELECT MAX(id) FROM karyawan";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement st = conn.createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                int lastId = rs.getInt(1);
                txtIdKaryawan.setText(String.valueOf(lastId + 1));
            } else {
                txtIdKaryawan.setText("1"); // Jika tabel kosong, mulai dari ID 1
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saat mengisi ID otomatis: " + e.getMessage());
        }
    }

    private void generateIdProyek() {
        try {
            String sql = "SELECT MAX(id) FROM proyek";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement st = conn.createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                int lastId = rs.getInt(1);
                txtIdProyek.setText(String.valueOf(lastId + 1));
            } else {
                txtIdProyek.setText("1"); // Jika tabel kosong, mulai dari ID 1
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saat mengisi ID otomatis: " + e.getMessage());
        }
    }

        // Panggil metode generate ID saat form diinisialisasi
    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        generateIdKaryawan();
        generateIdProyek();
    }
}

